// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: work.proto

package pipe.work;

public final class Work {
  private Work() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface WorkStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:WorkState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 enqueued = 1;</code>
     */
    boolean hasEnqueued();
    /**
     * <code>required int32 enqueued = 1;</code>
     */
    int getEnqueued();

    /**
     * <code>required int32 processed = 2;</code>
     */
    boolean hasProcessed();
    /**
     * <code>required int32 processed = 2;</code>
     */
    int getProcessed();
  }
  /**
   * Protobuf type {@code WorkState}
   */
  public static final class WorkState extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:WorkState)
      WorkStateOrBuilder {
    // Use WorkState.newBuilder() to construct.
    private WorkState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WorkState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WorkState defaultInstance;
    public static WorkState getDefaultInstance() {
      return defaultInstance;
    }

    public WorkState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WorkState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              enqueued_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              processed_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pipe.work.Work.internal_static_WorkState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pipe.work.Work.internal_static_WorkState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pipe.work.Work.WorkState.class, pipe.work.Work.WorkState.Builder.class);
    }

    public static com.google.protobuf.Parser<WorkState> PARSER =
        new com.google.protobuf.AbstractParser<WorkState>() {
      public WorkState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WorkState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WorkState> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ENQUEUED_FIELD_NUMBER = 1;
    private int enqueued_;
    /**
     * <code>required int32 enqueued = 1;</code>
     */
    public boolean hasEnqueued() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 enqueued = 1;</code>
     */
    public int getEnqueued() {
      return enqueued_;
    }

    public static final int PROCESSED_FIELD_NUMBER = 2;
    private int processed_;
    /**
     * <code>required int32 processed = 2;</code>
     */
    public boolean hasProcessed() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 processed = 2;</code>
     */
    public int getProcessed() {
      return processed_;
    }

    private void initFields() {
      enqueued_ = 0;
      processed_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasEnqueued()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProcessed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, enqueued_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, processed_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, enqueued_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, processed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pipe.work.Work.WorkState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.WorkState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.WorkState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.WorkState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.WorkState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.WorkState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.WorkState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pipe.work.Work.WorkState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.WorkState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.WorkState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pipe.work.Work.WorkState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code WorkState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:WorkState)
        pipe.work.Work.WorkStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pipe.work.Work.internal_static_WorkState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pipe.work.Work.internal_static_WorkState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pipe.work.Work.WorkState.class, pipe.work.Work.WorkState.Builder.class);
      }

      // Construct using pipe.work.Work.WorkState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        enqueued_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        processed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pipe.work.Work.internal_static_WorkState_descriptor;
      }

      public pipe.work.Work.WorkState getDefaultInstanceForType() {
        return pipe.work.Work.WorkState.getDefaultInstance();
      }

      public pipe.work.Work.WorkState build() {
        pipe.work.Work.WorkState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pipe.work.Work.WorkState buildPartial() {
        pipe.work.Work.WorkState result = new pipe.work.Work.WorkState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.enqueued_ = enqueued_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.processed_ = processed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pipe.work.Work.WorkState) {
          return mergeFrom((pipe.work.Work.WorkState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pipe.work.Work.WorkState other) {
        if (other == pipe.work.Work.WorkState.getDefaultInstance()) return this;
        if (other.hasEnqueued()) {
          setEnqueued(other.getEnqueued());
        }
        if (other.hasProcessed()) {
          setProcessed(other.getProcessed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasEnqueued()) {
          
          return false;
        }
        if (!hasProcessed()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pipe.work.Work.WorkState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pipe.work.Work.WorkState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int enqueued_ ;
      /**
       * <code>required int32 enqueued = 1;</code>
       */
      public boolean hasEnqueued() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 enqueued = 1;</code>
       */
      public int getEnqueued() {
        return enqueued_;
      }
      /**
       * <code>required int32 enqueued = 1;</code>
       */
      public Builder setEnqueued(int value) {
        bitField0_ |= 0x00000001;
        enqueued_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 enqueued = 1;</code>
       */
      public Builder clearEnqueued() {
        bitField0_ = (bitField0_ & ~0x00000001);
        enqueued_ = 0;
        onChanged();
        return this;
      }

      private int processed_ ;
      /**
       * <code>required int32 processed = 2;</code>
       */
      public boolean hasProcessed() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 processed = 2;</code>
       */
      public int getProcessed() {
        return processed_;
      }
      /**
       * <code>required int32 processed = 2;</code>
       */
      public Builder setProcessed(int value) {
        bitField0_ |= 0x00000002;
        processed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 processed = 2;</code>
       */
      public Builder clearProcessed() {
        bitField0_ = (bitField0_ & ~0x00000002);
        processed_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:WorkState)
    }

    static {
      defaultInstance = new WorkState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:WorkState)
  }

  public interface HeartbeatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Heartbeat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .WorkState state = 1;</code>
     */
    boolean hasState();
    /**
     * <code>required .WorkState state = 1;</code>
     */
    pipe.work.Work.WorkState getState();
    /**
     * <code>required .WorkState state = 1;</code>
     */
    pipe.work.Work.WorkStateOrBuilder getStateOrBuilder();
  }
  /**
   * Protobuf type {@code Heartbeat}
   */
  public static final class Heartbeat extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Heartbeat)
      HeartbeatOrBuilder {
    // Use Heartbeat.newBuilder() to construct.
    private Heartbeat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Heartbeat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Heartbeat defaultInstance;
    public static Heartbeat getDefaultInstance() {
      return defaultInstance;
    }

    public Heartbeat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Heartbeat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              pipe.work.Work.WorkState.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = state_.toBuilder();
              }
              state_ = input.readMessage(pipe.work.Work.WorkState.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(state_);
                state_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pipe.work.Work.internal_static_Heartbeat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pipe.work.Work.internal_static_Heartbeat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pipe.work.Work.Heartbeat.class, pipe.work.Work.Heartbeat.Builder.class);
    }

    public static com.google.protobuf.Parser<Heartbeat> PARSER =
        new com.google.protobuf.AbstractParser<Heartbeat>() {
      public Heartbeat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Heartbeat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Heartbeat> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STATE_FIELD_NUMBER = 1;
    private pipe.work.Work.WorkState state_;
    /**
     * <code>required .WorkState state = 1;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .WorkState state = 1;</code>
     */
    public pipe.work.Work.WorkState getState() {
      return state_;
    }
    /**
     * <code>required .WorkState state = 1;</code>
     */
    public pipe.work.Work.WorkStateOrBuilder getStateOrBuilder() {
      return state_;
    }

    private void initFields() {
      state_ = pipe.work.Work.WorkState.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getState().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, state_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, state_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pipe.work.Work.Heartbeat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.Heartbeat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.Heartbeat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.Heartbeat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.Heartbeat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.Heartbeat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.Heartbeat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pipe.work.Work.Heartbeat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.Heartbeat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.Heartbeat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pipe.work.Work.Heartbeat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Heartbeat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Heartbeat)
        pipe.work.Work.HeartbeatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pipe.work.Work.internal_static_Heartbeat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pipe.work.Work.internal_static_Heartbeat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pipe.work.Work.Heartbeat.class, pipe.work.Work.Heartbeat.Builder.class);
      }

      // Construct using pipe.work.Work.Heartbeat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStateFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (stateBuilder_ == null) {
          state_ = pipe.work.Work.WorkState.getDefaultInstance();
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pipe.work.Work.internal_static_Heartbeat_descriptor;
      }

      public pipe.work.Work.Heartbeat getDefaultInstanceForType() {
        return pipe.work.Work.Heartbeat.getDefaultInstance();
      }

      public pipe.work.Work.Heartbeat build() {
        pipe.work.Work.Heartbeat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pipe.work.Work.Heartbeat buildPartial() {
        pipe.work.Work.Heartbeat result = new pipe.work.Work.Heartbeat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (stateBuilder_ == null) {
          result.state_ = state_;
        } else {
          result.state_ = stateBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pipe.work.Work.Heartbeat) {
          return mergeFrom((pipe.work.Work.Heartbeat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pipe.work.Work.Heartbeat other) {
        if (other == pipe.work.Work.Heartbeat.getDefaultInstance()) return this;
        if (other.hasState()) {
          mergeState(other.getState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasState()) {
          
          return false;
        }
        if (!getState().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pipe.work.Work.Heartbeat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pipe.work.Work.Heartbeat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private pipe.work.Work.WorkState state_ = pipe.work.Work.WorkState.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.WorkState, pipe.work.Work.WorkState.Builder, pipe.work.Work.WorkStateOrBuilder> stateBuilder_;
      /**
       * <code>required .WorkState state = 1;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .WorkState state = 1;</code>
       */
      public pipe.work.Work.WorkState getState() {
        if (stateBuilder_ == null) {
          return state_;
        } else {
          return stateBuilder_.getMessage();
        }
      }
      /**
       * <code>required .WorkState state = 1;</code>
       */
      public Builder setState(pipe.work.Work.WorkState value) {
        if (stateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          state_ = value;
          onChanged();
        } else {
          stateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .WorkState state = 1;</code>
       */
      public Builder setState(
          pipe.work.Work.WorkState.Builder builderForValue) {
        if (stateBuilder_ == null) {
          state_ = builderForValue.build();
          onChanged();
        } else {
          stateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .WorkState state = 1;</code>
       */
      public Builder mergeState(pipe.work.Work.WorkState value) {
        if (stateBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              state_ != pipe.work.Work.WorkState.getDefaultInstance()) {
            state_ =
              pipe.work.Work.WorkState.newBuilder(state_).mergeFrom(value).buildPartial();
          } else {
            state_ = value;
          }
          onChanged();
        } else {
          stateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .WorkState state = 1;</code>
       */
      public Builder clearState() {
        if (stateBuilder_ == null) {
          state_ = pipe.work.Work.WorkState.getDefaultInstance();
          onChanged();
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .WorkState state = 1;</code>
       */
      public pipe.work.Work.WorkState.Builder getStateBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getStateFieldBuilder().getBuilder();
      }
      /**
       * <code>required .WorkState state = 1;</code>
       */
      public pipe.work.Work.WorkStateOrBuilder getStateOrBuilder() {
        if (stateBuilder_ != null) {
          return stateBuilder_.getMessageOrBuilder();
        } else {
          return state_;
        }
      }
      /**
       * <code>required .WorkState state = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.WorkState, pipe.work.Work.WorkState.Builder, pipe.work.Work.WorkStateOrBuilder> 
          getStateFieldBuilder() {
        if (stateBuilder_ == null) {
          stateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pipe.work.Work.WorkState, pipe.work.Work.WorkState.Builder, pipe.work.Work.WorkStateOrBuilder>(
                  getState(),
                  getParentForChildren(),
                  isClean());
          state_ = null;
        }
        return stateBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Heartbeat)
    }

    static {
      defaultInstance = new Heartbeat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Heartbeat)
  }

  public interface TaskOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Task)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 series_id = 1;</code>
     */
    boolean hasSeriesId();
    /**
     * <code>required int64 series_id = 1;</code>
     */
    long getSeriesId();

    /**
     * <code>required int32 seq_id = 2;</code>
     */
    boolean hasSeqId();
    /**
     * <code>required int32 seq_id = 2;</code>
     */
    int getSeqId();
  }
  /**
   * Protobuf type {@code Task}
   *
   * <pre>
   **
   * description of the work
   * </pre>
   */
  public static final class Task extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Task)
      TaskOrBuilder {
    // Use Task.newBuilder() to construct.
    private Task(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Task(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Task defaultInstance;
    public static Task getDefaultInstance() {
      return defaultInstance;
    }

    public Task getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Task(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seriesId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seqId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pipe.work.Work.internal_static_Task_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pipe.work.Work.internal_static_Task_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pipe.work.Work.Task.class, pipe.work.Work.Task.Builder.class);
    }

    public static com.google.protobuf.Parser<Task> PARSER =
        new com.google.protobuf.AbstractParser<Task>() {
      public Task parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Task(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Task> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SERIES_ID_FIELD_NUMBER = 1;
    private long seriesId_;
    /**
     * <code>required int64 series_id = 1;</code>
     */
    public boolean hasSeriesId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 series_id = 1;</code>
     */
    public long getSeriesId() {
      return seriesId_;
    }

    public static final int SEQ_ID_FIELD_NUMBER = 2;
    private int seqId_;
    /**
     * <code>required int32 seq_id = 2;</code>
     */
    public boolean hasSeqId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 seq_id = 2;</code>
     */
    public int getSeqId() {
      return seqId_;
    }

    private void initFields() {
      seriesId_ = 0L;
      seqId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSeriesId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSeqId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, seriesId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seqId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, seriesId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seqId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pipe.work.Work.Task parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.Task parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.Task parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.Task parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.Task parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.Task parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.Task parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pipe.work.Work.Task parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.Task parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.Task parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pipe.work.Work.Task prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Task}
     *
     * <pre>
     **
     * description of the work
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Task)
        pipe.work.Work.TaskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pipe.work.Work.internal_static_Task_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pipe.work.Work.internal_static_Task_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pipe.work.Work.Task.class, pipe.work.Work.Task.Builder.class);
      }

      // Construct using pipe.work.Work.Task.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seriesId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        seqId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pipe.work.Work.internal_static_Task_descriptor;
      }

      public pipe.work.Work.Task getDefaultInstanceForType() {
        return pipe.work.Work.Task.getDefaultInstance();
      }

      public pipe.work.Work.Task build() {
        pipe.work.Work.Task result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pipe.work.Work.Task buildPartial() {
        pipe.work.Work.Task result = new pipe.work.Work.Task(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seriesId_ = seriesId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seqId_ = seqId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pipe.work.Work.Task) {
          return mergeFrom((pipe.work.Work.Task)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pipe.work.Work.Task other) {
        if (other == pipe.work.Work.Task.getDefaultInstance()) return this;
        if (other.hasSeriesId()) {
          setSeriesId(other.getSeriesId());
        }
        if (other.hasSeqId()) {
          setSeqId(other.getSeqId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSeriesId()) {
          
          return false;
        }
        if (!hasSeqId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pipe.work.Work.Task parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pipe.work.Work.Task) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long seriesId_ ;
      /**
       * <code>required int64 series_id = 1;</code>
       */
      public boolean hasSeriesId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 series_id = 1;</code>
       */
      public long getSeriesId() {
        return seriesId_;
      }
      /**
       * <code>required int64 series_id = 1;</code>
       */
      public Builder setSeriesId(long value) {
        bitField0_ |= 0x00000001;
        seriesId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 series_id = 1;</code>
       */
      public Builder clearSeriesId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seriesId_ = 0L;
        onChanged();
        return this;
      }

      private int seqId_ ;
      /**
       * <code>required int32 seq_id = 2;</code>
       */
      public boolean hasSeqId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 seq_id = 2;</code>
       */
      public int getSeqId() {
        return seqId_;
      }
      /**
       * <code>required int32 seq_id = 2;</code>
       */
      public Builder setSeqId(int value) {
        bitField0_ |= 0x00000002;
        seqId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 seq_id = 2;</code>
       */
      public Builder clearSeqId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seqId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Task)
    }

    static {
      defaultInstance = new Task(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Task)
  }

  public interface NodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Node)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 node_id = 1;</code>
     */
    boolean hasNodeId();
    /**
     * <code>required int32 node_id = 1;</code>
     */
    int getNodeId();

    /**
     * <code>required string ip_addr = 2;</code>
     */
    boolean hasIpAddr();
    /**
     * <code>required string ip_addr = 2;</code>
     */
    java.lang.String getIpAddr();
    /**
     * <code>required string ip_addr = 2;</code>
     */
    com.google.protobuf.ByteString
        getIpAddrBytes();

    /**
     * <code>required int32 work_port = 3;</code>
     */
    boolean hasWorkPort();
    /**
     * <code>required int32 work_port = 3;</code>
     */
    int getWorkPort();
  }
  /**
   * Protobuf type {@code Node}
   */
  public static final class Node extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Node)
      NodeOrBuilder {
    // Use Node.newBuilder() to construct.
    private Node(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Node(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Node defaultInstance;
    public static Node getDefaultInstance() {
      return defaultInstance;
    }

    public Node getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Node(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              nodeId_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              ipAddr_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              workPort_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pipe.work.Work.internal_static_Node_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pipe.work.Work.internal_static_Node_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pipe.work.Work.Node.class, pipe.work.Work.Node.Builder.class);
    }

    public static com.google.protobuf.Parser<Node> PARSER =
        new com.google.protobuf.AbstractParser<Node>() {
      public Node parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Node(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Node> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NODE_ID_FIELD_NUMBER = 1;
    private int nodeId_;
    /**
     * <code>required int32 node_id = 1;</code>
     */
    public boolean hasNodeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 node_id = 1;</code>
     */
    public int getNodeId() {
      return nodeId_;
    }

    public static final int IP_ADDR_FIELD_NUMBER = 2;
    private java.lang.Object ipAddr_;
    /**
     * <code>required string ip_addr = 2;</code>
     */
    public boolean hasIpAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string ip_addr = 2;</code>
     */
    public java.lang.String getIpAddr() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ipAddr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ip_addr = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIpAddrBytes() {
      java.lang.Object ref = ipAddr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ipAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WORK_PORT_FIELD_NUMBER = 3;
    private int workPort_;
    /**
     * <code>required int32 work_port = 3;</code>
     */
    public boolean hasWorkPort() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 work_port = 3;</code>
     */
    public int getWorkPort() {
      return workPort_;
    }

    private void initFields() {
      nodeId_ = 0;
      ipAddr_ = "";
      workPort_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasNodeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIpAddr()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWorkPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, nodeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, workPort_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, nodeId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIpAddrBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, workPort_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pipe.work.Work.Node parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.Node parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.Node parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.Node parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.Node parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.Node parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.Node parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pipe.work.Work.Node parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.Node parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.Node parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pipe.work.Work.Node prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Node}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Node)
        pipe.work.Work.NodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pipe.work.Work.internal_static_Node_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pipe.work.Work.internal_static_Node_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pipe.work.Work.Node.class, pipe.work.Work.Node.Builder.class);
      }

      // Construct using pipe.work.Work.Node.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        nodeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ipAddr_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        workPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pipe.work.Work.internal_static_Node_descriptor;
      }

      public pipe.work.Work.Node getDefaultInstanceForType() {
        return pipe.work.Work.Node.getDefaultInstance();
      }

      public pipe.work.Work.Node build() {
        pipe.work.Work.Node result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pipe.work.Work.Node buildPartial() {
        pipe.work.Work.Node result = new pipe.work.Work.Node(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.nodeId_ = nodeId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ipAddr_ = ipAddr_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.workPort_ = workPort_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pipe.work.Work.Node) {
          return mergeFrom((pipe.work.Work.Node)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pipe.work.Work.Node other) {
        if (other == pipe.work.Work.Node.getDefaultInstance()) return this;
        if (other.hasNodeId()) {
          setNodeId(other.getNodeId());
        }
        if (other.hasIpAddr()) {
          bitField0_ |= 0x00000002;
          ipAddr_ = other.ipAddr_;
          onChanged();
        }
        if (other.hasWorkPort()) {
          setWorkPort(other.getWorkPort());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasNodeId()) {
          
          return false;
        }
        if (!hasIpAddr()) {
          
          return false;
        }
        if (!hasWorkPort()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pipe.work.Work.Node parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pipe.work.Work.Node) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int nodeId_ ;
      /**
       * <code>required int32 node_id = 1;</code>
       */
      public boolean hasNodeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 node_id = 1;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>required int32 node_id = 1;</code>
       */
      public Builder setNodeId(int value) {
        bitField0_ |= 0x00000001;
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 node_id = 1;</code>
       */
      public Builder clearNodeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nodeId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object ipAddr_ = "";
      /**
       * <code>required string ip_addr = 2;</code>
       */
      public boolean hasIpAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string ip_addr = 2;</code>
       */
      public java.lang.String getIpAddr() {
        java.lang.Object ref = ipAddr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ipAddr_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string ip_addr = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIpAddrBytes() {
        java.lang.Object ref = ipAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ip_addr = 2;</code>
       */
      public Builder setIpAddr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ipAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string ip_addr = 2;</code>
       */
      public Builder clearIpAddr() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ipAddr_ = getDefaultInstance().getIpAddr();
        onChanged();
        return this;
      }
      /**
       * <code>required string ip_addr = 2;</code>
       */
      public Builder setIpAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ipAddr_ = value;
        onChanged();
        return this;
      }

      private int workPort_ ;
      /**
       * <code>required int32 work_port = 3;</code>
       */
      public boolean hasWorkPort() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 work_port = 3;</code>
       */
      public int getWorkPort() {
        return workPort_;
      }
      /**
       * <code>required int32 work_port = 3;</code>
       */
      public Builder setWorkPort(int value) {
        bitField0_ |= 0x00000004;
        workPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 work_port = 3;</code>
       */
      public Builder clearWorkPort() {
        bitField0_ = (bitField0_ & ~0x00000004);
        workPort_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Node)
    }

    static {
      defaultInstance = new Node(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Node)
  }

  public interface DiscoveryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Discovery)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Node routing_table = 1;</code>
     *
     * <pre>
     * reply with a list of connected nodes from destination
     * </pre>
     */
    java.util.List<pipe.work.Work.Node> 
        getRoutingTableList();
    /**
     * <code>repeated .Node routing_table = 1;</code>
     *
     * <pre>
     * reply with a list of connected nodes from destination
     * </pre>
     */
    pipe.work.Work.Node getRoutingTable(int index);
    /**
     * <code>repeated .Node routing_table = 1;</code>
     *
     * <pre>
     * reply with a list of connected nodes from destination
     * </pre>
     */
    int getRoutingTableCount();
    /**
     * <code>repeated .Node routing_table = 1;</code>
     *
     * <pre>
     * reply with a list of connected nodes from destination
     * </pre>
     */
    java.util.List<? extends pipe.work.Work.NodeOrBuilder> 
        getRoutingTableOrBuilderList();
    /**
     * <code>repeated .Node routing_table = 1;</code>
     *
     * <pre>
     * reply with a list of connected nodes from destination
     * </pre>
     */
    pipe.work.Work.NodeOrBuilder getRoutingTableOrBuilder(
        int index);

    /**
     * <code>optional .Node node = 2;</code>
     *
     * <pre>
     * Sender node information
     * </pre>
     */
    boolean hasNode();
    /**
     * <code>optional .Node node = 2;</code>
     *
     * <pre>
     * Sender node information
     * </pre>
     */
    pipe.work.Work.Node getNode();
    /**
     * <code>optional .Node node = 2;</code>
     *
     * <pre>
     * Sender node information
     * </pre>
     */
    pipe.work.Work.NodeOrBuilder getNodeOrBuilder();

    /**
     * <code>optional .Node leader = 3;</code>
     *
     * <pre>
     * reply with leader info from destination
     * </pre>
     */
    boolean hasLeader();
    /**
     * <code>optional .Node leader = 3;</code>
     *
     * <pre>
     * reply with leader info from destination
     * </pre>
     */
    pipe.work.Work.Node getLeader();
    /**
     * <code>optional .Node leader = 3;</code>
     *
     * <pre>
     * reply with leader info from destination
     * </pre>
     */
    pipe.work.Work.NodeOrBuilder getLeaderOrBuilder();
  }
  /**
   * Protobuf type {@code Discovery}
   */
  public static final class Discovery extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Discovery)
      DiscoveryOrBuilder {
    // Use Discovery.newBuilder() to construct.
    private Discovery(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Discovery(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Discovery defaultInstance;
    public static Discovery getDefaultInstance() {
      return defaultInstance;
    }

    public Discovery getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Discovery(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                routingTable_ = new java.util.ArrayList<pipe.work.Work.Node>();
                mutable_bitField0_ |= 0x00000001;
              }
              routingTable_.add(input.readMessage(pipe.work.Work.Node.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              pipe.work.Work.Node.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = node_.toBuilder();
              }
              node_ = input.readMessage(pipe.work.Work.Node.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(node_);
                node_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 26: {
              pipe.work.Work.Node.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = leader_.toBuilder();
              }
              leader_ = input.readMessage(pipe.work.Work.Node.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(leader_);
                leader_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          routingTable_ = java.util.Collections.unmodifiableList(routingTable_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pipe.work.Work.internal_static_Discovery_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pipe.work.Work.internal_static_Discovery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pipe.work.Work.Discovery.class, pipe.work.Work.Discovery.Builder.class);
    }

    public static com.google.protobuf.Parser<Discovery> PARSER =
        new com.google.protobuf.AbstractParser<Discovery>() {
      public Discovery parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Discovery(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Discovery> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ROUTING_TABLE_FIELD_NUMBER = 1;
    private java.util.List<pipe.work.Work.Node> routingTable_;
    /**
     * <code>repeated .Node routing_table = 1;</code>
     *
     * <pre>
     * reply with a list of connected nodes from destination
     * </pre>
     */
    public java.util.List<pipe.work.Work.Node> getRoutingTableList() {
      return routingTable_;
    }
    /**
     * <code>repeated .Node routing_table = 1;</code>
     *
     * <pre>
     * reply with a list of connected nodes from destination
     * </pre>
     */
    public java.util.List<? extends pipe.work.Work.NodeOrBuilder> 
        getRoutingTableOrBuilderList() {
      return routingTable_;
    }
    /**
     * <code>repeated .Node routing_table = 1;</code>
     *
     * <pre>
     * reply with a list of connected nodes from destination
     * </pre>
     */
    public int getRoutingTableCount() {
      return routingTable_.size();
    }
    /**
     * <code>repeated .Node routing_table = 1;</code>
     *
     * <pre>
     * reply with a list of connected nodes from destination
     * </pre>
     */
    public pipe.work.Work.Node getRoutingTable(int index) {
      return routingTable_.get(index);
    }
    /**
     * <code>repeated .Node routing_table = 1;</code>
     *
     * <pre>
     * reply with a list of connected nodes from destination
     * </pre>
     */
    public pipe.work.Work.NodeOrBuilder getRoutingTableOrBuilder(
        int index) {
      return routingTable_.get(index);
    }

    public static final int NODE_FIELD_NUMBER = 2;
    private pipe.work.Work.Node node_;
    /**
     * <code>optional .Node node = 2;</code>
     *
     * <pre>
     * Sender node information
     * </pre>
     */
    public boolean hasNode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .Node node = 2;</code>
     *
     * <pre>
     * Sender node information
     * </pre>
     */
    public pipe.work.Work.Node getNode() {
      return node_;
    }
    /**
     * <code>optional .Node node = 2;</code>
     *
     * <pre>
     * Sender node information
     * </pre>
     */
    public pipe.work.Work.NodeOrBuilder getNodeOrBuilder() {
      return node_;
    }

    public static final int LEADER_FIELD_NUMBER = 3;
    private pipe.work.Work.Node leader_;
    /**
     * <code>optional .Node leader = 3;</code>
     *
     * <pre>
     * reply with leader info from destination
     * </pre>
     */
    public boolean hasLeader() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .Node leader = 3;</code>
     *
     * <pre>
     * reply with leader info from destination
     * </pre>
     */
    public pipe.work.Work.Node getLeader() {
      return leader_;
    }
    /**
     * <code>optional .Node leader = 3;</code>
     *
     * <pre>
     * reply with leader info from destination
     * </pre>
     */
    public pipe.work.Work.NodeOrBuilder getLeaderOrBuilder() {
      return leader_;
    }

    private void initFields() {
      routingTable_ = java.util.Collections.emptyList();
      node_ = pipe.work.Work.Node.getDefaultInstance();
      leader_ = pipe.work.Work.Node.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getRoutingTableCount(); i++) {
        if (!getRoutingTable(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasNode()) {
        if (!getNode().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLeader()) {
        if (!getLeader().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < routingTable_.size(); i++) {
        output.writeMessage(1, routingTable_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, node_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, leader_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < routingTable_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, routingTable_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, node_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, leader_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pipe.work.Work.Discovery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.Discovery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.Discovery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.Discovery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.Discovery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.Discovery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.Discovery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pipe.work.Work.Discovery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.Discovery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.Discovery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pipe.work.Work.Discovery prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Discovery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Discovery)
        pipe.work.Work.DiscoveryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pipe.work.Work.internal_static_Discovery_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pipe.work.Work.internal_static_Discovery_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pipe.work.Work.Discovery.class, pipe.work.Work.Discovery.Builder.class);
      }

      // Construct using pipe.work.Work.Discovery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoutingTableFieldBuilder();
          getNodeFieldBuilder();
          getLeaderFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (routingTableBuilder_ == null) {
          routingTable_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          routingTableBuilder_.clear();
        }
        if (nodeBuilder_ == null) {
          node_ = pipe.work.Work.Node.getDefaultInstance();
        } else {
          nodeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (leaderBuilder_ == null) {
          leader_ = pipe.work.Work.Node.getDefaultInstance();
        } else {
          leaderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pipe.work.Work.internal_static_Discovery_descriptor;
      }

      public pipe.work.Work.Discovery getDefaultInstanceForType() {
        return pipe.work.Work.Discovery.getDefaultInstance();
      }

      public pipe.work.Work.Discovery build() {
        pipe.work.Work.Discovery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pipe.work.Work.Discovery buildPartial() {
        pipe.work.Work.Discovery result = new pipe.work.Work.Discovery(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (routingTableBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            routingTable_ = java.util.Collections.unmodifiableList(routingTable_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.routingTable_ = routingTable_;
        } else {
          result.routingTable_ = routingTableBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        if (nodeBuilder_ == null) {
          result.node_ = node_;
        } else {
          result.node_ = nodeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (leaderBuilder_ == null) {
          result.leader_ = leader_;
        } else {
          result.leader_ = leaderBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pipe.work.Work.Discovery) {
          return mergeFrom((pipe.work.Work.Discovery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pipe.work.Work.Discovery other) {
        if (other == pipe.work.Work.Discovery.getDefaultInstance()) return this;
        if (routingTableBuilder_ == null) {
          if (!other.routingTable_.isEmpty()) {
            if (routingTable_.isEmpty()) {
              routingTable_ = other.routingTable_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRoutingTableIsMutable();
              routingTable_.addAll(other.routingTable_);
            }
            onChanged();
          }
        } else {
          if (!other.routingTable_.isEmpty()) {
            if (routingTableBuilder_.isEmpty()) {
              routingTableBuilder_.dispose();
              routingTableBuilder_ = null;
              routingTable_ = other.routingTable_;
              bitField0_ = (bitField0_ & ~0x00000001);
              routingTableBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRoutingTableFieldBuilder() : null;
            } else {
              routingTableBuilder_.addAllMessages(other.routingTable_);
            }
          }
        }
        if (other.hasNode()) {
          mergeNode(other.getNode());
        }
        if (other.hasLeader()) {
          mergeLeader(other.getLeader());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getRoutingTableCount(); i++) {
          if (!getRoutingTable(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasNode()) {
          if (!getNode().isInitialized()) {
            
            return false;
          }
        }
        if (hasLeader()) {
          if (!getLeader().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pipe.work.Work.Discovery parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pipe.work.Work.Discovery) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<pipe.work.Work.Node> routingTable_ =
        java.util.Collections.emptyList();
      private void ensureRoutingTableIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          routingTable_ = new java.util.ArrayList<pipe.work.Work.Node>(routingTable_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pipe.work.Work.Node, pipe.work.Work.Node.Builder, pipe.work.Work.NodeOrBuilder> routingTableBuilder_;

      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public java.util.List<pipe.work.Work.Node> getRoutingTableList() {
        if (routingTableBuilder_ == null) {
          return java.util.Collections.unmodifiableList(routingTable_);
        } else {
          return routingTableBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public int getRoutingTableCount() {
        if (routingTableBuilder_ == null) {
          return routingTable_.size();
        } else {
          return routingTableBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public pipe.work.Work.Node getRoutingTable(int index) {
        if (routingTableBuilder_ == null) {
          return routingTable_.get(index);
        } else {
          return routingTableBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public Builder setRoutingTable(
          int index, pipe.work.Work.Node value) {
        if (routingTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoutingTableIsMutable();
          routingTable_.set(index, value);
          onChanged();
        } else {
          routingTableBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public Builder setRoutingTable(
          int index, pipe.work.Work.Node.Builder builderForValue) {
        if (routingTableBuilder_ == null) {
          ensureRoutingTableIsMutable();
          routingTable_.set(index, builderForValue.build());
          onChanged();
        } else {
          routingTableBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public Builder addRoutingTable(pipe.work.Work.Node value) {
        if (routingTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoutingTableIsMutable();
          routingTable_.add(value);
          onChanged();
        } else {
          routingTableBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public Builder addRoutingTable(
          int index, pipe.work.Work.Node value) {
        if (routingTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoutingTableIsMutable();
          routingTable_.add(index, value);
          onChanged();
        } else {
          routingTableBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public Builder addRoutingTable(
          pipe.work.Work.Node.Builder builderForValue) {
        if (routingTableBuilder_ == null) {
          ensureRoutingTableIsMutable();
          routingTable_.add(builderForValue.build());
          onChanged();
        } else {
          routingTableBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public Builder addRoutingTable(
          int index, pipe.work.Work.Node.Builder builderForValue) {
        if (routingTableBuilder_ == null) {
          ensureRoutingTableIsMutable();
          routingTable_.add(index, builderForValue.build());
          onChanged();
        } else {
          routingTableBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public Builder addAllRoutingTable(
          java.lang.Iterable<? extends pipe.work.Work.Node> values) {
        if (routingTableBuilder_ == null) {
          ensureRoutingTableIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, routingTable_);
          onChanged();
        } else {
          routingTableBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public Builder clearRoutingTable() {
        if (routingTableBuilder_ == null) {
          routingTable_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          routingTableBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public Builder removeRoutingTable(int index) {
        if (routingTableBuilder_ == null) {
          ensureRoutingTableIsMutable();
          routingTable_.remove(index);
          onChanged();
        } else {
          routingTableBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public pipe.work.Work.Node.Builder getRoutingTableBuilder(
          int index) {
        return getRoutingTableFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public pipe.work.Work.NodeOrBuilder getRoutingTableOrBuilder(
          int index) {
        if (routingTableBuilder_ == null) {
          return routingTable_.get(index);  } else {
          return routingTableBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public java.util.List<? extends pipe.work.Work.NodeOrBuilder> 
           getRoutingTableOrBuilderList() {
        if (routingTableBuilder_ != null) {
          return routingTableBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(routingTable_);
        }
      }
      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public pipe.work.Work.Node.Builder addRoutingTableBuilder() {
        return getRoutingTableFieldBuilder().addBuilder(
            pipe.work.Work.Node.getDefaultInstance());
      }
      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public pipe.work.Work.Node.Builder addRoutingTableBuilder(
          int index) {
        return getRoutingTableFieldBuilder().addBuilder(
            index, pipe.work.Work.Node.getDefaultInstance());
      }
      /**
       * <code>repeated .Node routing_table = 1;</code>
       *
       * <pre>
       * reply with a list of connected nodes from destination
       * </pre>
       */
      public java.util.List<pipe.work.Work.Node.Builder> 
           getRoutingTableBuilderList() {
        return getRoutingTableFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pipe.work.Work.Node, pipe.work.Work.Node.Builder, pipe.work.Work.NodeOrBuilder> 
          getRoutingTableFieldBuilder() {
        if (routingTableBuilder_ == null) {
          routingTableBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pipe.work.Work.Node, pipe.work.Work.Node.Builder, pipe.work.Work.NodeOrBuilder>(
                  routingTable_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          routingTable_ = null;
        }
        return routingTableBuilder_;
      }

      private pipe.work.Work.Node node_ = pipe.work.Work.Node.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.Node, pipe.work.Work.Node.Builder, pipe.work.Work.NodeOrBuilder> nodeBuilder_;
      /**
       * <code>optional .Node node = 2;</code>
       *
       * <pre>
       * Sender node information
       * </pre>
       */
      public boolean hasNode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .Node node = 2;</code>
       *
       * <pre>
       * Sender node information
       * </pre>
       */
      public pipe.work.Work.Node getNode() {
        if (nodeBuilder_ == null) {
          return node_;
        } else {
          return nodeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Node node = 2;</code>
       *
       * <pre>
       * Sender node information
       * </pre>
       */
      public Builder setNode(pipe.work.Work.Node value) {
        if (nodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          node_ = value;
          onChanged();
        } else {
          nodeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Node node = 2;</code>
       *
       * <pre>
       * Sender node information
       * </pre>
       */
      public Builder setNode(
          pipe.work.Work.Node.Builder builderForValue) {
        if (nodeBuilder_ == null) {
          node_ = builderForValue.build();
          onChanged();
        } else {
          nodeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Node node = 2;</code>
       *
       * <pre>
       * Sender node information
       * </pre>
       */
      public Builder mergeNode(pipe.work.Work.Node value) {
        if (nodeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              node_ != pipe.work.Work.Node.getDefaultInstance()) {
            node_ =
              pipe.work.Work.Node.newBuilder(node_).mergeFrom(value).buildPartial();
          } else {
            node_ = value;
          }
          onChanged();
        } else {
          nodeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Node node = 2;</code>
       *
       * <pre>
       * Sender node information
       * </pre>
       */
      public Builder clearNode() {
        if (nodeBuilder_ == null) {
          node_ = pipe.work.Work.Node.getDefaultInstance();
          onChanged();
        } else {
          nodeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .Node node = 2;</code>
       *
       * <pre>
       * Sender node information
       * </pre>
       */
      public pipe.work.Work.Node.Builder getNodeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getNodeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Node node = 2;</code>
       *
       * <pre>
       * Sender node information
       * </pre>
       */
      public pipe.work.Work.NodeOrBuilder getNodeOrBuilder() {
        if (nodeBuilder_ != null) {
          return nodeBuilder_.getMessageOrBuilder();
        } else {
          return node_;
        }
      }
      /**
       * <code>optional .Node node = 2;</code>
       *
       * <pre>
       * Sender node information
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.Node, pipe.work.Work.Node.Builder, pipe.work.Work.NodeOrBuilder> 
          getNodeFieldBuilder() {
        if (nodeBuilder_ == null) {
          nodeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pipe.work.Work.Node, pipe.work.Work.Node.Builder, pipe.work.Work.NodeOrBuilder>(
                  getNode(),
                  getParentForChildren(),
                  isClean());
          node_ = null;
        }
        return nodeBuilder_;
      }

      private pipe.work.Work.Node leader_ = pipe.work.Work.Node.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.Node, pipe.work.Work.Node.Builder, pipe.work.Work.NodeOrBuilder> leaderBuilder_;
      /**
       * <code>optional .Node leader = 3;</code>
       *
       * <pre>
       * reply with leader info from destination
       * </pre>
       */
      public boolean hasLeader() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .Node leader = 3;</code>
       *
       * <pre>
       * reply with leader info from destination
       * </pre>
       */
      public pipe.work.Work.Node getLeader() {
        if (leaderBuilder_ == null) {
          return leader_;
        } else {
          return leaderBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Node leader = 3;</code>
       *
       * <pre>
       * reply with leader info from destination
       * </pre>
       */
      public Builder setLeader(pipe.work.Work.Node value) {
        if (leaderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          leader_ = value;
          onChanged();
        } else {
          leaderBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Node leader = 3;</code>
       *
       * <pre>
       * reply with leader info from destination
       * </pre>
       */
      public Builder setLeader(
          pipe.work.Work.Node.Builder builderForValue) {
        if (leaderBuilder_ == null) {
          leader_ = builderForValue.build();
          onChanged();
        } else {
          leaderBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Node leader = 3;</code>
       *
       * <pre>
       * reply with leader info from destination
       * </pre>
       */
      public Builder mergeLeader(pipe.work.Work.Node value) {
        if (leaderBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              leader_ != pipe.work.Work.Node.getDefaultInstance()) {
            leader_ =
              pipe.work.Work.Node.newBuilder(leader_).mergeFrom(value).buildPartial();
          } else {
            leader_ = value;
          }
          onChanged();
        } else {
          leaderBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Node leader = 3;</code>
       *
       * <pre>
       * reply with leader info from destination
       * </pre>
       */
      public Builder clearLeader() {
        if (leaderBuilder_ == null) {
          leader_ = pipe.work.Work.Node.getDefaultInstance();
          onChanged();
        } else {
          leaderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .Node leader = 3;</code>
       *
       * <pre>
       * reply with leader info from destination
       * </pre>
       */
      public pipe.work.Work.Node.Builder getLeaderBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getLeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Node leader = 3;</code>
       *
       * <pre>
       * reply with leader info from destination
       * </pre>
       */
      public pipe.work.Work.NodeOrBuilder getLeaderOrBuilder() {
        if (leaderBuilder_ != null) {
          return leaderBuilder_.getMessageOrBuilder();
        } else {
          return leader_;
        }
      }
      /**
       * <code>optional .Node leader = 3;</code>
       *
       * <pre>
       * reply with leader info from destination
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.Node, pipe.work.Work.Node.Builder, pipe.work.Work.NodeOrBuilder> 
          getLeaderFieldBuilder() {
        if (leaderBuilder_ == null) {
          leaderBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pipe.work.Work.Node, pipe.work.Work.Node.Builder, pipe.work.Work.NodeOrBuilder>(
                  getLeader(),
                  getParentForChildren(),
                  isClean());
          leader_ = null;
        }
        return leaderBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Discovery)
    }

    static {
      defaultInstance = new Discovery(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Discovery)
  }

  public interface WorkMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:WorkMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .Header header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>required .Header header = 1;</code>
     */
    pipe.common.Common.Header getHeader();
    /**
     * <code>required .Header header = 1;</code>
     */
    pipe.common.Common.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>required int64 secret = 2;</code>
     */
    boolean hasSecret();
    /**
     * <code>required int64 secret = 2;</code>
     */
    long getSecret();

    /**
     * <code>required .WorkMessage.MessageType type = 3;</code>
     */
    boolean hasType();
    /**
     * <code>required .WorkMessage.MessageType type = 3;</code>
     */
    pipe.work.Work.WorkMessage.MessageType getType();

    /**
     * <code>optional .Failure err = 4;</code>
     */
    boolean hasErr();
    /**
     * <code>optional .Failure err = 4;</code>
     */
    pipe.common.Common.Failure getErr();
    /**
     * <code>optional .Failure err = 4;</code>
     */
    pipe.common.Common.FailureOrBuilder getErrOrBuilder();

    /**
     * <code>optional bool ping = 5;</code>
     *
     * <pre>
     * a sanity check for testing
     * </pre>
     */
    boolean hasPing();
    /**
     * <code>optional bool ping = 5;</code>
     *
     * <pre>
     * a sanity check for testing
     * </pre>
     */
    boolean getPing();

    /**
     * <code>optional .Heartbeat beat = 6;</code>
     *
     * <pre>
     * status updates between adjacent workers
     * </pre>
     */
    boolean hasBeat();
    /**
     * <code>optional .Heartbeat beat = 6;</code>
     *
     * <pre>
     * status updates between adjacent workers
     * </pre>
     */
    pipe.work.Work.Heartbeat getBeat();
    /**
     * <code>optional .Heartbeat beat = 6;</code>
     *
     * <pre>
     * status updates between adjacent workers
     * </pre>
     */
    pipe.work.Work.HeartbeatOrBuilder getBeatOrBuilder();

    /**
     * <code>optional .Task task = 7;</code>
     */
    boolean hasTask();
    /**
     * <code>optional .Task task = 7;</code>
     */
    pipe.work.Work.Task getTask();
    /**
     * <code>optional .Task task = 7;</code>
     */
    pipe.work.Work.TaskOrBuilder getTaskOrBuilder();

    /**
     * <code>optional .WorkState state = 8;</code>
     */
    boolean hasState();
    /**
     * <code>optional .WorkState state = 8;</code>
     */
    pipe.work.Work.WorkState getState();
    /**
     * <code>optional .WorkState state = 8;</code>
     */
    pipe.work.Work.WorkStateOrBuilder getStateOrBuilder();

    /**
     * <code>optional .LeaderStatus leader = 9;</code>
     */
    boolean hasLeader();
    /**
     * <code>optional .LeaderStatus leader = 9;</code>
     */
    pipe.election.Election.LeaderStatus getLeader();
    /**
     * <code>optional .LeaderStatus leader = 9;</code>
     */
    pipe.election.Election.LeaderStatusOrBuilder getLeaderOrBuilder();

    /**
     * <code>optional .Discovery discovery = 10;</code>
     *
     * <pre>
     *this payload is used while discovering the messages
     * </pre>
     */
    boolean hasDiscovery();
    /**
     * <code>optional .Discovery discovery = 10;</code>
     *
     * <pre>
     *this payload is used while discovering the messages
     * </pre>
     */
    pipe.work.Work.Discovery getDiscovery();
    /**
     * <code>optional .Discovery discovery = 10;</code>
     *
     * <pre>
     *this payload is used while discovering the messages
     * </pre>
     */
    pipe.work.Work.DiscoveryOrBuilder getDiscoveryOrBuilder();

    /**
     * <code>optional .LeaderElection leaderElectionRequest = 11;</code>
     */
    boolean hasLeaderElectionRequest();
    /**
     * <code>optional .LeaderElection leaderElectionRequest = 11;</code>
     */
    pipe.election.Election.LeaderElection getLeaderElectionRequest();
    /**
     * <code>optional .LeaderElection leaderElectionRequest = 11;</code>
     */
    pipe.election.Election.LeaderElectionOrBuilder getLeaderElectionRequestOrBuilder();

    /**
     * <code>optional .LeaderElectionResponse leaderElectionResponse = 12;</code>
     */
    boolean hasLeaderElectionResponse();
    /**
     * <code>optional .LeaderElectionResponse leaderElectionResponse = 12;</code>
     */
    pipe.election.Election.LeaderElectionResponse getLeaderElectionResponse();
    /**
     * <code>optional .LeaderElectionResponse leaderElectionResponse = 12;</code>
     */
    pipe.election.Election.LeaderElectionResponseOrBuilder getLeaderElectionResponseOrBuilder();

    /**
     * <code>optional .LogAppendEntry log_append_entries = 13;</code>
     */
    boolean hasLogAppendEntries();
    /**
     * <code>optional .LogAppendEntry log_append_entries = 13;</code>
     */
    pipe.work.Work.LogAppendEntry getLogAppendEntries();
    /**
     * <code>optional .LogAppendEntry log_append_entries = 13;</code>
     */
    pipe.work.Work.LogAppendEntryOrBuilder getLogAppendEntriesOrBuilder();

    /**
     * <code>optional .LogAppendResponse logAppendResponse = 14;</code>
     */
    boolean hasLogAppendResponse();
    /**
     * <code>optional .LogAppendResponse logAppendResponse = 14;</code>
     */
    pipe.work.Work.LogAppendResponse getLogAppendResponse();
    /**
     * <code>optional .LogAppendResponse logAppendResponse = 14;</code>
     */
    pipe.work.Work.LogAppendResponseOrBuilder getLogAppendResponseOrBuilder();

    /**
     * <code>optional .FileChunkData chunk_data = 15;</code>
     */
    boolean hasChunkData();
    /**
     * <code>optional .FileChunkData chunk_data = 15;</code>
     */
    pipe.work.Work.FileChunkData getChunkData();
    /**
     * <code>optional .FileChunkData chunk_data = 15;</code>
     */
    pipe.work.Work.FileChunkDataOrBuilder getChunkDataOrBuilder();

    /**
     * <code>optional .WorkMessage stolenWork = 16;</code>
     */
    boolean hasStolenWork();
    /**
     * <code>optional .WorkMessage stolenWork = 16;</code>
     */
    pipe.work.Work.WorkMessage getStolenWork();
    /**
     * <code>optional .WorkMessage stolenWork = 16;</code>
     */
    pipe.work.Work.WorkMessageOrBuilder getStolenWorkOrBuilder();
  }
  /**
   * Protobuf type {@code WorkMessage}
   *
   * <pre>
   * These are messages to keep the network running (not to perform work)
   * </pre>
   */
  public static final class WorkMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:WorkMessage)
      WorkMessageOrBuilder {
    // Use WorkMessage.newBuilder() to construct.
    private WorkMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private WorkMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final WorkMessage defaultInstance;
    public static WorkMessage getDefaultInstance() {
      return defaultInstance;
    }

    public WorkMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private WorkMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              pipe.common.Common.Header.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(pipe.common.Common.Header.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              secret_ = input.readInt64();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              pipe.work.Work.WorkMessage.MessageType value = pipe.work.Work.WorkMessage.MessageType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                type_ = value;
              }
              break;
            }
            case 34: {
              pipe.common.Common.Failure.Builder subBuilder = null;
              if (payloadCase_ == 4) {
                subBuilder = ((pipe.common.Common.Failure) payload_).toBuilder();
              }
              payload_ = input.readMessage(pipe.common.Common.Failure.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pipe.common.Common.Failure) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 4;
              break;
            }
            case 40: {
              payloadCase_ = 5;
              payload_ = input.readBool();
              break;
            }
            case 50: {
              pipe.work.Work.Heartbeat.Builder subBuilder = null;
              if (payloadCase_ == 6) {
                subBuilder = ((pipe.work.Work.Heartbeat) payload_).toBuilder();
              }
              payload_ = input.readMessage(pipe.work.Work.Heartbeat.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pipe.work.Work.Heartbeat) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 6;
              break;
            }
            case 58: {
              pipe.work.Work.Task.Builder subBuilder = null;
              if (payloadCase_ == 7) {
                subBuilder = ((pipe.work.Work.Task) payload_).toBuilder();
              }
              payload_ = input.readMessage(pipe.work.Work.Task.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pipe.work.Work.Task) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 7;
              break;
            }
            case 66: {
              pipe.work.Work.WorkState.Builder subBuilder = null;
              if (payloadCase_ == 8) {
                subBuilder = ((pipe.work.Work.WorkState) payload_).toBuilder();
              }
              payload_ = input.readMessage(pipe.work.Work.WorkState.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pipe.work.Work.WorkState) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 8;
              break;
            }
            case 74: {
              pipe.election.Election.LeaderStatus.Builder subBuilder = null;
              if (payloadCase_ == 9) {
                subBuilder = ((pipe.election.Election.LeaderStatus) payload_).toBuilder();
              }
              payload_ = input.readMessage(pipe.election.Election.LeaderStatus.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pipe.election.Election.LeaderStatus) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 9;
              break;
            }
            case 82: {
              pipe.work.Work.Discovery.Builder subBuilder = null;
              if (payloadCase_ == 10) {
                subBuilder = ((pipe.work.Work.Discovery) payload_).toBuilder();
              }
              payload_ = input.readMessage(pipe.work.Work.Discovery.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pipe.work.Work.Discovery) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 10;
              break;
            }
            case 90: {
              pipe.election.Election.LeaderElection.Builder subBuilder = null;
              if (payloadCase_ == 11) {
                subBuilder = ((pipe.election.Election.LeaderElection) payload_).toBuilder();
              }
              payload_ = input.readMessage(pipe.election.Election.LeaderElection.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pipe.election.Election.LeaderElection) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 11;
              break;
            }
            case 98: {
              pipe.election.Election.LeaderElectionResponse.Builder subBuilder = null;
              if (payloadCase_ == 12) {
                subBuilder = ((pipe.election.Election.LeaderElectionResponse) payload_).toBuilder();
              }
              payload_ = input.readMessage(pipe.election.Election.LeaderElectionResponse.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pipe.election.Election.LeaderElectionResponse) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 12;
              break;
            }
            case 106: {
              pipe.work.Work.LogAppendEntry.Builder subBuilder = null;
              if (payloadCase_ == 13) {
                subBuilder = ((pipe.work.Work.LogAppendEntry) payload_).toBuilder();
              }
              payload_ = input.readMessage(pipe.work.Work.LogAppendEntry.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pipe.work.Work.LogAppendEntry) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 13;
              break;
            }
            case 114: {
              pipe.work.Work.LogAppendResponse.Builder subBuilder = null;
              if (payloadCase_ == 14) {
                subBuilder = ((pipe.work.Work.LogAppendResponse) payload_).toBuilder();
              }
              payload_ = input.readMessage(pipe.work.Work.LogAppendResponse.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pipe.work.Work.LogAppendResponse) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 14;
              break;
            }
            case 122: {
              pipe.work.Work.FileChunkData.Builder subBuilder = null;
              if (payloadCase_ == 15) {
                subBuilder = ((pipe.work.Work.FileChunkData) payload_).toBuilder();
              }
              payload_ = input.readMessage(pipe.work.Work.FileChunkData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pipe.work.Work.FileChunkData) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 15;
              break;
            }
            case 130: {
              pipe.work.Work.WorkMessage.Builder subBuilder = null;
              if (payloadCase_ == 16) {
                subBuilder = ((pipe.work.Work.WorkMessage) payload_).toBuilder();
              }
              payload_ = input.readMessage(pipe.work.Work.WorkMessage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((pipe.work.Work.WorkMessage) payload_);
                payload_ = subBuilder.buildPartial();
              }
              payloadCase_ = 16;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pipe.work.Work.internal_static_WorkMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pipe.work.Work.internal_static_WorkMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pipe.work.Work.WorkMessage.class, pipe.work.Work.WorkMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<WorkMessage> PARSER =
        new com.google.protobuf.AbstractParser<WorkMessage>() {
      public WorkMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WorkMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<WorkMessage> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code WorkMessage.MessageType}
     *
     * <pre>
     **
     * The actions (request or response) is
     * implicit through which data structure is in the payload.
     * </pre>
     */
    public enum MessageType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>DISCOVERNODE = 1;</code>
       */
      DISCOVERNODE(0, 1),
      /**
       * <code>DISCOVERNODEREPLY = 2;</code>
       */
      DISCOVERNODEREPLY(1, 2),
      /**
       * <code>LEADERELECTION = 3;</code>
       */
      LEADERELECTION(2, 3),
      /**
       * <code>LEADERELECTIONREPLY = 4;</code>
       */
      LEADERELECTIONREPLY(3, 4),
      /**
       * <code>LEADERSTATUS = 5;</code>
       */
      LEADERSTATUS(4, 5),
      /**
       * <code>LEADERSTATUSREPLY = 6;</code>
       */
      LEADERSTATUSREPLY(5, 6),
      /**
       * <code>HEARTBEAT = 7;</code>
       */
      HEARTBEAT(6, 7),
      /**
       * <code>PING = 8;</code>
       */
      PING(7, 8),
      /**
       * <code>PINGREPLY = 9;</code>
       */
      PINGREPLY(8, 9),
      /**
       * <code>FAILURE = 10;</code>
       */
      FAILURE(9, 10),
      /**
       * <code>WORKSTATE = 11;</code>
       */
      WORKSTATE(10, 11),
      /**
       * <code>WORKSTATEREPLY = 12;</code>
       */
      WORKSTATEREPLY(11, 12),
      /**
       * <code>LOGAPPENDENTRY = 13;</code>
       */
      LOGAPPENDENTRY(12, 13),
      /**
       * <code>LOGAPPENDRESPONSE = 14;</code>
       */
      LOGAPPENDRESPONSE(13, 14),
      /**
       * <code>CHUNKFILEDATAREAD = 15;</code>
       */
      CHUNKFILEDATAREAD(14, 15),
      /**
       * <code>CHUNKFILEDATAWRITE = 16;</code>
       */
      CHUNKFILEDATAWRITE(15, 16),
      /**
       * <code>CHUNKFILEDATAREADRESPONSE = 17;</code>
       */
      CHUNKFILEDATAREADRESPONSE(16, 17),
      /**
       * <code>CHUNKFILEDATAWRITERESPONSE = 18;</code>
       */
      CHUNKFILEDATAWRITERESPONSE(17, 18),
      /**
       * <code>WORKSTEALREQUEST = 19;</code>
       */
      WORKSTEALREQUEST(18, 19),
      /**
       * <code>WORKSTEALRESPONSE = 20;</code>
       */
      WORKSTEALRESPONSE(19, 20),
      ;

      /**
       * <code>DISCOVERNODE = 1;</code>
       */
      public static final int DISCOVERNODE_VALUE = 1;
      /**
       * <code>DISCOVERNODEREPLY = 2;</code>
       */
      public static final int DISCOVERNODEREPLY_VALUE = 2;
      /**
       * <code>LEADERELECTION = 3;</code>
       */
      public static final int LEADERELECTION_VALUE = 3;
      /**
       * <code>LEADERELECTIONREPLY = 4;</code>
       */
      public static final int LEADERELECTIONREPLY_VALUE = 4;
      /**
       * <code>LEADERSTATUS = 5;</code>
       */
      public static final int LEADERSTATUS_VALUE = 5;
      /**
       * <code>LEADERSTATUSREPLY = 6;</code>
       */
      public static final int LEADERSTATUSREPLY_VALUE = 6;
      /**
       * <code>HEARTBEAT = 7;</code>
       */
      public static final int HEARTBEAT_VALUE = 7;
      /**
       * <code>PING = 8;</code>
       */
      public static final int PING_VALUE = 8;
      /**
       * <code>PINGREPLY = 9;</code>
       */
      public static final int PINGREPLY_VALUE = 9;
      /**
       * <code>FAILURE = 10;</code>
       */
      public static final int FAILURE_VALUE = 10;
      /**
       * <code>WORKSTATE = 11;</code>
       */
      public static final int WORKSTATE_VALUE = 11;
      /**
       * <code>WORKSTATEREPLY = 12;</code>
       */
      public static final int WORKSTATEREPLY_VALUE = 12;
      /**
       * <code>LOGAPPENDENTRY = 13;</code>
       */
      public static final int LOGAPPENDENTRY_VALUE = 13;
      /**
       * <code>LOGAPPENDRESPONSE = 14;</code>
       */
      public static final int LOGAPPENDRESPONSE_VALUE = 14;
      /**
       * <code>CHUNKFILEDATAREAD = 15;</code>
       */
      public static final int CHUNKFILEDATAREAD_VALUE = 15;
      /**
       * <code>CHUNKFILEDATAWRITE = 16;</code>
       */
      public static final int CHUNKFILEDATAWRITE_VALUE = 16;
      /**
       * <code>CHUNKFILEDATAREADRESPONSE = 17;</code>
       */
      public static final int CHUNKFILEDATAREADRESPONSE_VALUE = 17;
      /**
       * <code>CHUNKFILEDATAWRITERESPONSE = 18;</code>
       */
      public static final int CHUNKFILEDATAWRITERESPONSE_VALUE = 18;
      /**
       * <code>WORKSTEALREQUEST = 19;</code>
       */
      public static final int WORKSTEALREQUEST_VALUE = 19;
      /**
       * <code>WORKSTEALRESPONSE = 20;</code>
       */
      public static final int WORKSTEALRESPONSE_VALUE = 20;


      public final int getNumber() { return value; }

      public static MessageType valueOf(int value) {
        switch (value) {
          case 1: return DISCOVERNODE;
          case 2: return DISCOVERNODEREPLY;
          case 3: return LEADERELECTION;
          case 4: return LEADERELECTIONREPLY;
          case 5: return LEADERSTATUS;
          case 6: return LEADERSTATUSREPLY;
          case 7: return HEARTBEAT;
          case 8: return PING;
          case 9: return PINGREPLY;
          case 10: return FAILURE;
          case 11: return WORKSTATE;
          case 12: return WORKSTATEREPLY;
          case 13: return LOGAPPENDENTRY;
          case 14: return LOGAPPENDRESPONSE;
          case 15: return CHUNKFILEDATAREAD;
          case 16: return CHUNKFILEDATAWRITE;
          case 17: return CHUNKFILEDATAREADRESPONSE;
          case 18: return CHUNKFILEDATAWRITERESPONSE;
          case 19: return WORKSTEALREQUEST;
          case 20: return WORKSTEALRESPONSE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<MessageType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
              public MessageType findValueByNumber(int number) {
                return MessageType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return pipe.work.Work.WorkMessage.getDescriptor().getEnumTypes().get(0);
      }

      private static final MessageType[] VALUES = values();

      public static MessageType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private MessageType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:WorkMessage.MessageType)
    }

    private int bitField0_;
    private int payloadCase_ = 0;
    private java.lang.Object payload_;
    public enum PayloadCase
        implements com.google.protobuf.Internal.EnumLite {
      ERR(4),
      PING(5),
      BEAT(6),
      TASK(7),
      STATE(8),
      LEADER(9),
      DISCOVERY(10),
      LEADERELECTIONREQUEST(11),
      LEADERELECTIONRESPONSE(12),
      LOG_APPEND_ENTRIES(13),
      LOGAPPENDRESPONSE(14),
      CHUNK_DATA(15),
      STOLENWORK(16),
      PAYLOAD_NOT_SET(0);
      private int value = 0;
      private PayloadCase(int value) {
        this.value = value;
      }
      public static PayloadCase valueOf(int value) {
        switch (value) {
          case 4: return ERR;
          case 5: return PING;
          case 6: return BEAT;
          case 7: return TASK;
          case 8: return STATE;
          case 9: return LEADER;
          case 10: return DISCOVERY;
          case 11: return LEADERELECTIONREQUEST;
          case 12: return LEADERELECTIONRESPONSE;
          case 13: return LOG_APPEND_ENTRIES;
          case 14: return LOGAPPENDRESPONSE;
          case 15: return CHUNK_DATA;
          case 16: return STOLENWORK;
          case 0: return PAYLOAD_NOT_SET;
          default: throw new java.lang.IllegalArgumentException(
            "Value is undefined for this oneof enum.");
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadCase
    getPayloadCase() {
      return PayloadCase.valueOf(
          payloadCase_);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private pipe.common.Common.Header header_;
    /**
     * <code>required .Header header = 1;</code>
     */
    public boolean hasHeader() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .Header header = 1;</code>
     */
    public pipe.common.Common.Header getHeader() {
      return header_;
    }
    /**
     * <code>required .Header header = 1;</code>
     */
    public pipe.common.Common.HeaderOrBuilder getHeaderOrBuilder() {
      return header_;
    }

    public static final int SECRET_FIELD_NUMBER = 2;
    private long secret_;
    /**
     * <code>required int64 secret = 2;</code>
     */
    public boolean hasSecret() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 secret = 2;</code>
     */
    public long getSecret() {
      return secret_;
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private pipe.work.Work.WorkMessage.MessageType type_;
    /**
     * <code>required .WorkMessage.MessageType type = 3;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .WorkMessage.MessageType type = 3;</code>
     */
    public pipe.work.Work.WorkMessage.MessageType getType() {
      return type_;
    }

    public static final int ERR_FIELD_NUMBER = 4;
    /**
     * <code>optional .Failure err = 4;</code>
     */
    public boolean hasErr() {
      return payloadCase_ == 4;
    }
    /**
     * <code>optional .Failure err = 4;</code>
     */
    public pipe.common.Common.Failure getErr() {
      if (payloadCase_ == 4) {
         return (pipe.common.Common.Failure) payload_;
      }
      return pipe.common.Common.Failure.getDefaultInstance();
    }
    /**
     * <code>optional .Failure err = 4;</code>
     */
    public pipe.common.Common.FailureOrBuilder getErrOrBuilder() {
      if (payloadCase_ == 4) {
         return (pipe.common.Common.Failure) payload_;
      }
      return pipe.common.Common.Failure.getDefaultInstance();
    }

    public static final int PING_FIELD_NUMBER = 5;
    /**
     * <code>optional bool ping = 5;</code>
     *
     * <pre>
     * a sanity check for testing
     * </pre>
     */
    public boolean hasPing() {
      return payloadCase_ == 5;
    }
    /**
     * <code>optional bool ping = 5;</code>
     *
     * <pre>
     * a sanity check for testing
     * </pre>
     */
    public boolean getPing() {
      if (payloadCase_ == 5) {
        return (java.lang.Boolean) payload_;
      }
      return false;
    }

    public static final int BEAT_FIELD_NUMBER = 6;
    /**
     * <code>optional .Heartbeat beat = 6;</code>
     *
     * <pre>
     * status updates between adjacent workers
     * </pre>
     */
    public boolean hasBeat() {
      return payloadCase_ == 6;
    }
    /**
     * <code>optional .Heartbeat beat = 6;</code>
     *
     * <pre>
     * status updates between adjacent workers
     * </pre>
     */
    public pipe.work.Work.Heartbeat getBeat() {
      if (payloadCase_ == 6) {
         return (pipe.work.Work.Heartbeat) payload_;
      }
      return pipe.work.Work.Heartbeat.getDefaultInstance();
    }
    /**
     * <code>optional .Heartbeat beat = 6;</code>
     *
     * <pre>
     * status updates between adjacent workers
     * </pre>
     */
    public pipe.work.Work.HeartbeatOrBuilder getBeatOrBuilder() {
      if (payloadCase_ == 6) {
         return (pipe.work.Work.Heartbeat) payload_;
      }
      return pipe.work.Work.Heartbeat.getDefaultInstance();
    }

    public static final int TASK_FIELD_NUMBER = 7;
    /**
     * <code>optional .Task task = 7;</code>
     */
    public boolean hasTask() {
      return payloadCase_ == 7;
    }
    /**
     * <code>optional .Task task = 7;</code>
     */
    public pipe.work.Work.Task getTask() {
      if (payloadCase_ == 7) {
         return (pipe.work.Work.Task) payload_;
      }
      return pipe.work.Work.Task.getDefaultInstance();
    }
    /**
     * <code>optional .Task task = 7;</code>
     */
    public pipe.work.Work.TaskOrBuilder getTaskOrBuilder() {
      if (payloadCase_ == 7) {
         return (pipe.work.Work.Task) payload_;
      }
      return pipe.work.Work.Task.getDefaultInstance();
    }

    public static final int STATE_FIELD_NUMBER = 8;
    /**
     * <code>optional .WorkState state = 8;</code>
     */
    public boolean hasState() {
      return payloadCase_ == 8;
    }
    /**
     * <code>optional .WorkState state = 8;</code>
     */
    public pipe.work.Work.WorkState getState() {
      if (payloadCase_ == 8) {
         return (pipe.work.Work.WorkState) payload_;
      }
      return pipe.work.Work.WorkState.getDefaultInstance();
    }
    /**
     * <code>optional .WorkState state = 8;</code>
     */
    public pipe.work.Work.WorkStateOrBuilder getStateOrBuilder() {
      if (payloadCase_ == 8) {
         return (pipe.work.Work.WorkState) payload_;
      }
      return pipe.work.Work.WorkState.getDefaultInstance();
    }

    public static final int LEADER_FIELD_NUMBER = 9;
    /**
     * <code>optional .LeaderStatus leader = 9;</code>
     */
    public boolean hasLeader() {
      return payloadCase_ == 9;
    }
    /**
     * <code>optional .LeaderStatus leader = 9;</code>
     */
    public pipe.election.Election.LeaderStatus getLeader() {
      if (payloadCase_ == 9) {
         return (pipe.election.Election.LeaderStatus) payload_;
      }
      return pipe.election.Election.LeaderStatus.getDefaultInstance();
    }
    /**
     * <code>optional .LeaderStatus leader = 9;</code>
     */
    public pipe.election.Election.LeaderStatusOrBuilder getLeaderOrBuilder() {
      if (payloadCase_ == 9) {
         return (pipe.election.Election.LeaderStatus) payload_;
      }
      return pipe.election.Election.LeaderStatus.getDefaultInstance();
    }

    public static final int DISCOVERY_FIELD_NUMBER = 10;
    /**
     * <code>optional .Discovery discovery = 10;</code>
     *
     * <pre>
     *this payload is used while discovering the messages
     * </pre>
     */
    public boolean hasDiscovery() {
      return payloadCase_ == 10;
    }
    /**
     * <code>optional .Discovery discovery = 10;</code>
     *
     * <pre>
     *this payload is used while discovering the messages
     * </pre>
     */
    public pipe.work.Work.Discovery getDiscovery() {
      if (payloadCase_ == 10) {
         return (pipe.work.Work.Discovery) payload_;
      }
      return pipe.work.Work.Discovery.getDefaultInstance();
    }
    /**
     * <code>optional .Discovery discovery = 10;</code>
     *
     * <pre>
     *this payload is used while discovering the messages
     * </pre>
     */
    public pipe.work.Work.DiscoveryOrBuilder getDiscoveryOrBuilder() {
      if (payloadCase_ == 10) {
         return (pipe.work.Work.Discovery) payload_;
      }
      return pipe.work.Work.Discovery.getDefaultInstance();
    }

    public static final int LEADERELECTIONREQUEST_FIELD_NUMBER = 11;
    /**
     * <code>optional .LeaderElection leaderElectionRequest = 11;</code>
     */
    public boolean hasLeaderElectionRequest() {
      return payloadCase_ == 11;
    }
    /**
     * <code>optional .LeaderElection leaderElectionRequest = 11;</code>
     */
    public pipe.election.Election.LeaderElection getLeaderElectionRequest() {
      if (payloadCase_ == 11) {
         return (pipe.election.Election.LeaderElection) payload_;
      }
      return pipe.election.Election.LeaderElection.getDefaultInstance();
    }
    /**
     * <code>optional .LeaderElection leaderElectionRequest = 11;</code>
     */
    public pipe.election.Election.LeaderElectionOrBuilder getLeaderElectionRequestOrBuilder() {
      if (payloadCase_ == 11) {
         return (pipe.election.Election.LeaderElection) payload_;
      }
      return pipe.election.Election.LeaderElection.getDefaultInstance();
    }

    public static final int LEADERELECTIONRESPONSE_FIELD_NUMBER = 12;
    /**
     * <code>optional .LeaderElectionResponse leaderElectionResponse = 12;</code>
     */
    public boolean hasLeaderElectionResponse() {
      return payloadCase_ == 12;
    }
    /**
     * <code>optional .LeaderElectionResponse leaderElectionResponse = 12;</code>
     */
    public pipe.election.Election.LeaderElectionResponse getLeaderElectionResponse() {
      if (payloadCase_ == 12) {
         return (pipe.election.Election.LeaderElectionResponse) payload_;
      }
      return pipe.election.Election.LeaderElectionResponse.getDefaultInstance();
    }
    /**
     * <code>optional .LeaderElectionResponse leaderElectionResponse = 12;</code>
     */
    public pipe.election.Election.LeaderElectionResponseOrBuilder getLeaderElectionResponseOrBuilder() {
      if (payloadCase_ == 12) {
         return (pipe.election.Election.LeaderElectionResponse) payload_;
      }
      return pipe.election.Election.LeaderElectionResponse.getDefaultInstance();
    }

    public static final int LOG_APPEND_ENTRIES_FIELD_NUMBER = 13;
    /**
     * <code>optional .LogAppendEntry log_append_entries = 13;</code>
     */
    public boolean hasLogAppendEntries() {
      return payloadCase_ == 13;
    }
    /**
     * <code>optional .LogAppendEntry log_append_entries = 13;</code>
     */
    public pipe.work.Work.LogAppendEntry getLogAppendEntries() {
      if (payloadCase_ == 13) {
         return (pipe.work.Work.LogAppendEntry) payload_;
      }
      return pipe.work.Work.LogAppendEntry.getDefaultInstance();
    }
    /**
     * <code>optional .LogAppendEntry log_append_entries = 13;</code>
     */
    public pipe.work.Work.LogAppendEntryOrBuilder getLogAppendEntriesOrBuilder() {
      if (payloadCase_ == 13) {
         return (pipe.work.Work.LogAppendEntry) payload_;
      }
      return pipe.work.Work.LogAppendEntry.getDefaultInstance();
    }

    public static final int LOGAPPENDRESPONSE_FIELD_NUMBER = 14;
    /**
     * <code>optional .LogAppendResponse logAppendResponse = 14;</code>
     */
    public boolean hasLogAppendResponse() {
      return payloadCase_ == 14;
    }
    /**
     * <code>optional .LogAppendResponse logAppendResponse = 14;</code>
     */
    public pipe.work.Work.LogAppendResponse getLogAppendResponse() {
      if (payloadCase_ == 14) {
         return (pipe.work.Work.LogAppendResponse) payload_;
      }
      return pipe.work.Work.LogAppendResponse.getDefaultInstance();
    }
    /**
     * <code>optional .LogAppendResponse logAppendResponse = 14;</code>
     */
    public pipe.work.Work.LogAppendResponseOrBuilder getLogAppendResponseOrBuilder() {
      if (payloadCase_ == 14) {
         return (pipe.work.Work.LogAppendResponse) payload_;
      }
      return pipe.work.Work.LogAppendResponse.getDefaultInstance();
    }

    public static final int CHUNK_DATA_FIELD_NUMBER = 15;
    /**
     * <code>optional .FileChunkData chunk_data = 15;</code>
     */
    public boolean hasChunkData() {
      return payloadCase_ == 15;
    }
    /**
     * <code>optional .FileChunkData chunk_data = 15;</code>
     */
    public pipe.work.Work.FileChunkData getChunkData() {
      if (payloadCase_ == 15) {
         return (pipe.work.Work.FileChunkData) payload_;
      }
      return pipe.work.Work.FileChunkData.getDefaultInstance();
    }
    /**
     * <code>optional .FileChunkData chunk_data = 15;</code>
     */
    public pipe.work.Work.FileChunkDataOrBuilder getChunkDataOrBuilder() {
      if (payloadCase_ == 15) {
         return (pipe.work.Work.FileChunkData) payload_;
      }
      return pipe.work.Work.FileChunkData.getDefaultInstance();
    }

    public static final int STOLENWORK_FIELD_NUMBER = 16;
    /**
     * <code>optional .WorkMessage stolenWork = 16;</code>
     */
    public boolean hasStolenWork() {
      return payloadCase_ == 16;
    }
    /**
     * <code>optional .WorkMessage stolenWork = 16;</code>
     */
    public pipe.work.Work.WorkMessage getStolenWork() {
      if (payloadCase_ == 16) {
         return (pipe.work.Work.WorkMessage) payload_;
      }
      return pipe.work.Work.WorkMessage.getDefaultInstance();
    }
    /**
     * <code>optional .WorkMessage stolenWork = 16;</code>
     */
    public pipe.work.Work.WorkMessageOrBuilder getStolenWorkOrBuilder() {
      if (payloadCase_ == 16) {
         return (pipe.work.Work.WorkMessage) payload_;
      }
      return pipe.work.Work.WorkMessage.getDefaultInstance();
    }

    private void initFields() {
      header_ = pipe.common.Common.Header.getDefaultInstance();
      secret_ = 0L;
      type_ = pipe.work.Work.WorkMessage.MessageType.DISCOVERNODE;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasHeader()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSecret()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getHeader().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasErr()) {
        if (!getErr().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasBeat()) {
        if (!getBeat().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTask()) {
        if (!getTask().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasState()) {
        if (!getState().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLeader()) {
        if (!getLeader().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDiscovery()) {
        if (!getDiscovery().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLeaderElectionRequest()) {
        if (!getLeaderElectionRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLeaderElectionResponse()) {
        if (!getLeaderElectionResponse().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLogAppendEntries()) {
        if (!getLogAppendEntries().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLogAppendResponse()) {
        if (!getLogAppendResponse().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasChunkData()) {
        if (!getChunkData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasStolenWork()) {
        if (!getStolenWork().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, header_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, secret_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, type_.getNumber());
      }
      if (payloadCase_ == 4) {
        output.writeMessage(4, (pipe.common.Common.Failure) payload_);
      }
      if (payloadCase_ == 5) {
        output.writeBool(
            5, (boolean)((java.lang.Boolean) payload_));
      }
      if (payloadCase_ == 6) {
        output.writeMessage(6, (pipe.work.Work.Heartbeat) payload_);
      }
      if (payloadCase_ == 7) {
        output.writeMessage(7, (pipe.work.Work.Task) payload_);
      }
      if (payloadCase_ == 8) {
        output.writeMessage(8, (pipe.work.Work.WorkState) payload_);
      }
      if (payloadCase_ == 9) {
        output.writeMessage(9, (pipe.election.Election.LeaderStatus) payload_);
      }
      if (payloadCase_ == 10) {
        output.writeMessage(10, (pipe.work.Work.Discovery) payload_);
      }
      if (payloadCase_ == 11) {
        output.writeMessage(11, (pipe.election.Election.LeaderElection) payload_);
      }
      if (payloadCase_ == 12) {
        output.writeMessage(12, (pipe.election.Election.LeaderElectionResponse) payload_);
      }
      if (payloadCase_ == 13) {
        output.writeMessage(13, (pipe.work.Work.LogAppendEntry) payload_);
      }
      if (payloadCase_ == 14) {
        output.writeMessage(14, (pipe.work.Work.LogAppendResponse) payload_);
      }
      if (payloadCase_ == 15) {
        output.writeMessage(15, (pipe.work.Work.FileChunkData) payload_);
      }
      if (payloadCase_ == 16) {
        output.writeMessage(16, (pipe.work.Work.WorkMessage) payload_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, header_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, secret_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_.getNumber());
      }
      if (payloadCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (pipe.common.Common.Failure) payload_);
      }
      if (payloadCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              5, (boolean)((java.lang.Boolean) payload_));
      }
      if (payloadCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (pipe.work.Work.Heartbeat) payload_);
      }
      if (payloadCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (pipe.work.Work.Task) payload_);
      }
      if (payloadCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (pipe.work.Work.WorkState) payload_);
      }
      if (payloadCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (pipe.election.Election.LeaderStatus) payload_);
      }
      if (payloadCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (pipe.work.Work.Discovery) payload_);
      }
      if (payloadCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (pipe.election.Election.LeaderElection) payload_);
      }
      if (payloadCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (pipe.election.Election.LeaderElectionResponse) payload_);
      }
      if (payloadCase_ == 13) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, (pipe.work.Work.LogAppendEntry) payload_);
      }
      if (payloadCase_ == 14) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, (pipe.work.Work.LogAppendResponse) payload_);
      }
      if (payloadCase_ == 15) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, (pipe.work.Work.FileChunkData) payload_);
      }
      if (payloadCase_ == 16) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, (pipe.work.Work.WorkMessage) payload_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pipe.work.Work.WorkMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.WorkMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.WorkMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.WorkMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.WorkMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.WorkMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.WorkMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pipe.work.Work.WorkMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.WorkMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.WorkMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pipe.work.Work.WorkMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code WorkMessage}
     *
     * <pre>
     * These are messages to keep the network running (not to perform work)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:WorkMessage)
        pipe.work.Work.WorkMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pipe.work.Work.internal_static_WorkMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pipe.work.Work.internal_static_WorkMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pipe.work.Work.WorkMessage.class, pipe.work.Work.WorkMessage.Builder.class);
      }

      // Construct using pipe.work.Work.WorkMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHeaderFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = pipe.common.Common.Header.getDefaultInstance();
        } else {
          headerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        secret_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = pipe.work.Work.WorkMessage.MessageType.DISCOVERNODE;
        bitField0_ = (bitField0_ & ~0x00000004);
        payloadCase_ = 0;
        payload_ = null;
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pipe.work.Work.internal_static_WorkMessage_descriptor;
      }

      public pipe.work.Work.WorkMessage getDefaultInstanceForType() {
        return pipe.work.Work.WorkMessage.getDefaultInstance();
      }

      public pipe.work.Work.WorkMessage build() {
        pipe.work.Work.WorkMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pipe.work.Work.WorkMessage buildPartial() {
        pipe.work.Work.WorkMessage result = new pipe.work.Work.WorkMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.secret_ = secret_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (payloadCase_ == 4) {
          if (errBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = errBuilder_.build();
          }
        }
        if (payloadCase_ == 5) {
          result.payload_ = payload_;
        }
        if (payloadCase_ == 6) {
          if (beatBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = beatBuilder_.build();
          }
        }
        if (payloadCase_ == 7) {
          if (taskBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = taskBuilder_.build();
          }
        }
        if (payloadCase_ == 8) {
          if (stateBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = stateBuilder_.build();
          }
        }
        if (payloadCase_ == 9) {
          if (leaderBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = leaderBuilder_.build();
          }
        }
        if (payloadCase_ == 10) {
          if (discoveryBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = discoveryBuilder_.build();
          }
        }
        if (payloadCase_ == 11) {
          if (leaderElectionRequestBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = leaderElectionRequestBuilder_.build();
          }
        }
        if (payloadCase_ == 12) {
          if (leaderElectionResponseBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = leaderElectionResponseBuilder_.build();
          }
        }
        if (payloadCase_ == 13) {
          if (logAppendEntriesBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = logAppendEntriesBuilder_.build();
          }
        }
        if (payloadCase_ == 14) {
          if (logAppendResponseBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = logAppendResponseBuilder_.build();
          }
        }
        if (payloadCase_ == 15) {
          if (chunkDataBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = chunkDataBuilder_.build();
          }
        }
        if (payloadCase_ == 16) {
          if (stolenWorkBuilder_ == null) {
            result.payload_ = payload_;
          } else {
            result.payload_ = stolenWorkBuilder_.build();
          }
        }
        result.bitField0_ = to_bitField0_;
        result.payloadCase_ = payloadCase_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pipe.work.Work.WorkMessage) {
          return mergeFrom((pipe.work.Work.WorkMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pipe.work.Work.WorkMessage other) {
        if (other == pipe.work.Work.WorkMessage.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasSecret()) {
          setSecret(other.getSecret());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        switch (other.getPayloadCase()) {
          case ERR: {
            mergeErr(other.getErr());
            break;
          }
          case PING: {
            setPing(other.getPing());
            break;
          }
          case BEAT: {
            mergeBeat(other.getBeat());
            break;
          }
          case TASK: {
            mergeTask(other.getTask());
            break;
          }
          case STATE: {
            mergeState(other.getState());
            break;
          }
          case LEADER: {
            mergeLeader(other.getLeader());
            break;
          }
          case DISCOVERY: {
            mergeDiscovery(other.getDiscovery());
            break;
          }
          case LEADERELECTIONREQUEST: {
            mergeLeaderElectionRequest(other.getLeaderElectionRequest());
            break;
          }
          case LEADERELECTIONRESPONSE: {
            mergeLeaderElectionResponse(other.getLeaderElectionResponse());
            break;
          }
          case LOG_APPEND_ENTRIES: {
            mergeLogAppendEntries(other.getLogAppendEntries());
            break;
          }
          case LOGAPPENDRESPONSE: {
            mergeLogAppendResponse(other.getLogAppendResponse());
            break;
          }
          case CHUNK_DATA: {
            mergeChunkData(other.getChunkData());
            break;
          }
          case STOLENWORK: {
            mergeStolenWork(other.getStolenWork());
            break;
          }
          case PAYLOAD_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHeader()) {
          
          return false;
        }
        if (!hasSecret()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!getHeader().isInitialized()) {
          
          return false;
        }
        if (hasErr()) {
          if (!getErr().isInitialized()) {
            
            return false;
          }
        }
        if (hasBeat()) {
          if (!getBeat().isInitialized()) {
            
            return false;
          }
        }
        if (hasTask()) {
          if (!getTask().isInitialized()) {
            
            return false;
          }
        }
        if (hasState()) {
          if (!getState().isInitialized()) {
            
            return false;
          }
        }
        if (hasLeader()) {
          if (!getLeader().isInitialized()) {
            
            return false;
          }
        }
        if (hasDiscovery()) {
          if (!getDiscovery().isInitialized()) {
            
            return false;
          }
        }
        if (hasLeaderElectionRequest()) {
          if (!getLeaderElectionRequest().isInitialized()) {
            
            return false;
          }
        }
        if (hasLeaderElectionResponse()) {
          if (!getLeaderElectionResponse().isInitialized()) {
            
            return false;
          }
        }
        if (hasLogAppendEntries()) {
          if (!getLogAppendEntries().isInitialized()) {
            
            return false;
          }
        }
        if (hasLogAppendResponse()) {
          if (!getLogAppendResponse().isInitialized()) {
            
            return false;
          }
        }
        if (hasChunkData()) {
          if (!getChunkData().isInitialized()) {
            
            return false;
          }
        }
        if (hasStolenWork()) {
          if (!getStolenWork().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pipe.work.Work.WorkMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pipe.work.Work.WorkMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int payloadCase_ = 0;
      private java.lang.Object payload_;
      public PayloadCase
          getPayloadCase() {
        return PayloadCase.valueOf(
            payloadCase_);
      }

      public Builder clearPayload() {
        payloadCase_ = 0;
        payload_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private pipe.common.Common.Header header_ = pipe.common.Common.Header.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pipe.common.Common.Header, pipe.common.Common.Header.Builder, pipe.common.Common.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>required .Header header = 1;</code>
       */
      public boolean hasHeader() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .Header header = 1;</code>
       */
      public pipe.common.Common.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>required .Header header = 1;</code>
       */
      public Builder setHeader(pipe.common.Common.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .Header header = 1;</code>
       */
      public Builder setHeader(
          pipe.common.Common.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .Header header = 1;</code>
       */
      public Builder mergeHeader(pipe.common.Common.Header value) {
        if (headerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              header_ != pipe.common.Common.Header.getDefaultInstance()) {
            header_ =
              pipe.common.Common.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = pipe.common.Common.Header.getDefaultInstance();
          onChanged();
        } else {
          headerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .Header header = 1;</code>
       */
      public pipe.common.Common.Header.Builder getHeaderBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>required .Header header = 1;</code>
       */
      public pipe.common.Common.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_;
        }
      }
      /**
       * <code>required .Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pipe.common.Common.Header, pipe.common.Common.Header.Builder, pipe.common.Common.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pipe.common.Common.Header, pipe.common.Common.Header.Builder, pipe.common.Common.HeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private long secret_ ;
      /**
       * <code>required int64 secret = 2;</code>
       */
      public boolean hasSecret() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 secret = 2;</code>
       */
      public long getSecret() {
        return secret_;
      }
      /**
       * <code>required int64 secret = 2;</code>
       */
      public Builder setSecret(long value) {
        bitField0_ |= 0x00000002;
        secret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 secret = 2;</code>
       */
      public Builder clearSecret() {
        bitField0_ = (bitField0_ & ~0x00000002);
        secret_ = 0L;
        onChanged();
        return this;
      }

      private pipe.work.Work.WorkMessage.MessageType type_ = pipe.work.Work.WorkMessage.MessageType.DISCOVERNODE;
      /**
       * <code>required .WorkMessage.MessageType type = 3;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .WorkMessage.MessageType type = 3;</code>
       */
      public pipe.work.Work.WorkMessage.MessageType getType() {
        return type_;
      }
      /**
       * <code>required .WorkMessage.MessageType type = 3;</code>
       */
      public Builder setType(pipe.work.Work.WorkMessage.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .WorkMessage.MessageType type = 3;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = pipe.work.Work.WorkMessage.MessageType.DISCOVERNODE;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pipe.common.Common.Failure, pipe.common.Common.Failure.Builder, pipe.common.Common.FailureOrBuilder> errBuilder_;
      /**
       * <code>optional .Failure err = 4;</code>
       */
      public boolean hasErr() {
        return payloadCase_ == 4;
      }
      /**
       * <code>optional .Failure err = 4;</code>
       */
      public pipe.common.Common.Failure getErr() {
        if (errBuilder_ == null) {
          if (payloadCase_ == 4) {
            return (pipe.common.Common.Failure) payload_;
          }
          return pipe.common.Common.Failure.getDefaultInstance();
        } else {
          if (payloadCase_ == 4) {
            return errBuilder_.getMessage();
          }
          return pipe.common.Common.Failure.getDefaultInstance();
        }
      }
      /**
       * <code>optional .Failure err = 4;</code>
       */
      public Builder setErr(pipe.common.Common.Failure value) {
        if (errBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          errBuilder_.setMessage(value);
        }
        payloadCase_ = 4;
        return this;
      }
      /**
       * <code>optional .Failure err = 4;</code>
       */
      public Builder setErr(
          pipe.common.Common.Failure.Builder builderForValue) {
        if (errBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          errBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 4;
        return this;
      }
      /**
       * <code>optional .Failure err = 4;</code>
       */
      public Builder mergeErr(pipe.common.Common.Failure value) {
        if (errBuilder_ == null) {
          if (payloadCase_ == 4 &&
              payload_ != pipe.common.Common.Failure.getDefaultInstance()) {
            payload_ = pipe.common.Common.Failure.newBuilder((pipe.common.Common.Failure) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 4) {
            errBuilder_.mergeFrom(value);
          }
          errBuilder_.setMessage(value);
        }
        payloadCase_ = 4;
        return this;
      }
      /**
       * <code>optional .Failure err = 4;</code>
       */
      public Builder clearErr() {
        if (errBuilder_ == null) {
          if (payloadCase_ == 4) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 4) {
            payloadCase_ = 0;
            payload_ = null;
          }
          errBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .Failure err = 4;</code>
       */
      public pipe.common.Common.Failure.Builder getErrBuilder() {
        return getErrFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Failure err = 4;</code>
       */
      public pipe.common.Common.FailureOrBuilder getErrOrBuilder() {
        if ((payloadCase_ == 4) && (errBuilder_ != null)) {
          return errBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 4) {
            return (pipe.common.Common.Failure) payload_;
          }
          return pipe.common.Common.Failure.getDefaultInstance();
        }
      }
      /**
       * <code>optional .Failure err = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pipe.common.Common.Failure, pipe.common.Common.Failure.Builder, pipe.common.Common.FailureOrBuilder> 
          getErrFieldBuilder() {
        if (errBuilder_ == null) {
          if (!(payloadCase_ == 4)) {
            payload_ = pipe.common.Common.Failure.getDefaultInstance();
          }
          errBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pipe.common.Common.Failure, pipe.common.Common.Failure.Builder, pipe.common.Common.FailureOrBuilder>(
                  (pipe.common.Common.Failure) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 4;
        return errBuilder_;
      }

      /**
       * <code>optional bool ping = 5;</code>
       *
       * <pre>
       * a sanity check for testing
       * </pre>
       */
      public boolean hasPing() {
        return payloadCase_ == 5;
      }
      /**
       * <code>optional bool ping = 5;</code>
       *
       * <pre>
       * a sanity check for testing
       * </pre>
       */
      public boolean getPing() {
        if (payloadCase_ == 5) {
          return (java.lang.Boolean) payload_;
        }
        return false;
      }
      /**
       * <code>optional bool ping = 5;</code>
       *
       * <pre>
       * a sanity check for testing
       * </pre>
       */
      public Builder setPing(boolean value) {
        payloadCase_ = 5;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ping = 5;</code>
       *
       * <pre>
       * a sanity check for testing
       * </pre>
       */
      public Builder clearPing() {
        if (payloadCase_ == 5) {
          payloadCase_ = 0;
          payload_ = null;
          onChanged();
        }
        return this;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.Heartbeat, pipe.work.Work.Heartbeat.Builder, pipe.work.Work.HeartbeatOrBuilder> beatBuilder_;
      /**
       * <code>optional .Heartbeat beat = 6;</code>
       *
       * <pre>
       * status updates between adjacent workers
       * </pre>
       */
      public boolean hasBeat() {
        return payloadCase_ == 6;
      }
      /**
       * <code>optional .Heartbeat beat = 6;</code>
       *
       * <pre>
       * status updates between adjacent workers
       * </pre>
       */
      public pipe.work.Work.Heartbeat getBeat() {
        if (beatBuilder_ == null) {
          if (payloadCase_ == 6) {
            return (pipe.work.Work.Heartbeat) payload_;
          }
          return pipe.work.Work.Heartbeat.getDefaultInstance();
        } else {
          if (payloadCase_ == 6) {
            return beatBuilder_.getMessage();
          }
          return pipe.work.Work.Heartbeat.getDefaultInstance();
        }
      }
      /**
       * <code>optional .Heartbeat beat = 6;</code>
       *
       * <pre>
       * status updates between adjacent workers
       * </pre>
       */
      public Builder setBeat(pipe.work.Work.Heartbeat value) {
        if (beatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          beatBuilder_.setMessage(value);
        }
        payloadCase_ = 6;
        return this;
      }
      /**
       * <code>optional .Heartbeat beat = 6;</code>
       *
       * <pre>
       * status updates between adjacent workers
       * </pre>
       */
      public Builder setBeat(
          pipe.work.Work.Heartbeat.Builder builderForValue) {
        if (beatBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          beatBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 6;
        return this;
      }
      /**
       * <code>optional .Heartbeat beat = 6;</code>
       *
       * <pre>
       * status updates between adjacent workers
       * </pre>
       */
      public Builder mergeBeat(pipe.work.Work.Heartbeat value) {
        if (beatBuilder_ == null) {
          if (payloadCase_ == 6 &&
              payload_ != pipe.work.Work.Heartbeat.getDefaultInstance()) {
            payload_ = pipe.work.Work.Heartbeat.newBuilder((pipe.work.Work.Heartbeat) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 6) {
            beatBuilder_.mergeFrom(value);
          }
          beatBuilder_.setMessage(value);
        }
        payloadCase_ = 6;
        return this;
      }
      /**
       * <code>optional .Heartbeat beat = 6;</code>
       *
       * <pre>
       * status updates between adjacent workers
       * </pre>
       */
      public Builder clearBeat() {
        if (beatBuilder_ == null) {
          if (payloadCase_ == 6) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 6) {
            payloadCase_ = 0;
            payload_ = null;
          }
          beatBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .Heartbeat beat = 6;</code>
       *
       * <pre>
       * status updates between adjacent workers
       * </pre>
       */
      public pipe.work.Work.Heartbeat.Builder getBeatBuilder() {
        return getBeatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Heartbeat beat = 6;</code>
       *
       * <pre>
       * status updates between adjacent workers
       * </pre>
       */
      public pipe.work.Work.HeartbeatOrBuilder getBeatOrBuilder() {
        if ((payloadCase_ == 6) && (beatBuilder_ != null)) {
          return beatBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 6) {
            return (pipe.work.Work.Heartbeat) payload_;
          }
          return pipe.work.Work.Heartbeat.getDefaultInstance();
        }
      }
      /**
       * <code>optional .Heartbeat beat = 6;</code>
       *
       * <pre>
       * status updates between adjacent workers
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.Heartbeat, pipe.work.Work.Heartbeat.Builder, pipe.work.Work.HeartbeatOrBuilder> 
          getBeatFieldBuilder() {
        if (beatBuilder_ == null) {
          if (!(payloadCase_ == 6)) {
            payload_ = pipe.work.Work.Heartbeat.getDefaultInstance();
          }
          beatBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pipe.work.Work.Heartbeat, pipe.work.Work.Heartbeat.Builder, pipe.work.Work.HeartbeatOrBuilder>(
                  (pipe.work.Work.Heartbeat) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 6;
        return beatBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.Task, pipe.work.Work.Task.Builder, pipe.work.Work.TaskOrBuilder> taskBuilder_;
      /**
       * <code>optional .Task task = 7;</code>
       */
      public boolean hasTask() {
        return payloadCase_ == 7;
      }
      /**
       * <code>optional .Task task = 7;</code>
       */
      public pipe.work.Work.Task getTask() {
        if (taskBuilder_ == null) {
          if (payloadCase_ == 7) {
            return (pipe.work.Work.Task) payload_;
          }
          return pipe.work.Work.Task.getDefaultInstance();
        } else {
          if (payloadCase_ == 7) {
            return taskBuilder_.getMessage();
          }
          return pipe.work.Work.Task.getDefaultInstance();
        }
      }
      /**
       * <code>optional .Task task = 7;</code>
       */
      public Builder setTask(pipe.work.Work.Task value) {
        if (taskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          taskBuilder_.setMessage(value);
        }
        payloadCase_ = 7;
        return this;
      }
      /**
       * <code>optional .Task task = 7;</code>
       */
      public Builder setTask(
          pipe.work.Work.Task.Builder builderForValue) {
        if (taskBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          taskBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 7;
        return this;
      }
      /**
       * <code>optional .Task task = 7;</code>
       */
      public Builder mergeTask(pipe.work.Work.Task value) {
        if (taskBuilder_ == null) {
          if (payloadCase_ == 7 &&
              payload_ != pipe.work.Work.Task.getDefaultInstance()) {
            payload_ = pipe.work.Work.Task.newBuilder((pipe.work.Work.Task) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 7) {
            taskBuilder_.mergeFrom(value);
          }
          taskBuilder_.setMessage(value);
        }
        payloadCase_ = 7;
        return this;
      }
      /**
       * <code>optional .Task task = 7;</code>
       */
      public Builder clearTask() {
        if (taskBuilder_ == null) {
          if (payloadCase_ == 7) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 7) {
            payloadCase_ = 0;
            payload_ = null;
          }
          taskBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .Task task = 7;</code>
       */
      public pipe.work.Work.Task.Builder getTaskBuilder() {
        return getTaskFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Task task = 7;</code>
       */
      public pipe.work.Work.TaskOrBuilder getTaskOrBuilder() {
        if ((payloadCase_ == 7) && (taskBuilder_ != null)) {
          return taskBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 7) {
            return (pipe.work.Work.Task) payload_;
          }
          return pipe.work.Work.Task.getDefaultInstance();
        }
      }
      /**
       * <code>optional .Task task = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.Task, pipe.work.Work.Task.Builder, pipe.work.Work.TaskOrBuilder> 
          getTaskFieldBuilder() {
        if (taskBuilder_ == null) {
          if (!(payloadCase_ == 7)) {
            payload_ = pipe.work.Work.Task.getDefaultInstance();
          }
          taskBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pipe.work.Work.Task, pipe.work.Work.Task.Builder, pipe.work.Work.TaskOrBuilder>(
                  (pipe.work.Work.Task) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 7;
        return taskBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.WorkState, pipe.work.Work.WorkState.Builder, pipe.work.Work.WorkStateOrBuilder> stateBuilder_;
      /**
       * <code>optional .WorkState state = 8;</code>
       */
      public boolean hasState() {
        return payloadCase_ == 8;
      }
      /**
       * <code>optional .WorkState state = 8;</code>
       */
      public pipe.work.Work.WorkState getState() {
        if (stateBuilder_ == null) {
          if (payloadCase_ == 8) {
            return (pipe.work.Work.WorkState) payload_;
          }
          return pipe.work.Work.WorkState.getDefaultInstance();
        } else {
          if (payloadCase_ == 8) {
            return stateBuilder_.getMessage();
          }
          return pipe.work.Work.WorkState.getDefaultInstance();
        }
      }
      /**
       * <code>optional .WorkState state = 8;</code>
       */
      public Builder setState(pipe.work.Work.WorkState value) {
        if (stateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          stateBuilder_.setMessage(value);
        }
        payloadCase_ = 8;
        return this;
      }
      /**
       * <code>optional .WorkState state = 8;</code>
       */
      public Builder setState(
          pipe.work.Work.WorkState.Builder builderForValue) {
        if (stateBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          stateBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 8;
        return this;
      }
      /**
       * <code>optional .WorkState state = 8;</code>
       */
      public Builder mergeState(pipe.work.Work.WorkState value) {
        if (stateBuilder_ == null) {
          if (payloadCase_ == 8 &&
              payload_ != pipe.work.Work.WorkState.getDefaultInstance()) {
            payload_ = pipe.work.Work.WorkState.newBuilder((pipe.work.Work.WorkState) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 8) {
            stateBuilder_.mergeFrom(value);
          }
          stateBuilder_.setMessage(value);
        }
        payloadCase_ = 8;
        return this;
      }
      /**
       * <code>optional .WorkState state = 8;</code>
       */
      public Builder clearState() {
        if (stateBuilder_ == null) {
          if (payloadCase_ == 8) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 8) {
            payloadCase_ = 0;
            payload_ = null;
          }
          stateBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .WorkState state = 8;</code>
       */
      public pipe.work.Work.WorkState.Builder getStateBuilder() {
        return getStateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .WorkState state = 8;</code>
       */
      public pipe.work.Work.WorkStateOrBuilder getStateOrBuilder() {
        if ((payloadCase_ == 8) && (stateBuilder_ != null)) {
          return stateBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 8) {
            return (pipe.work.Work.WorkState) payload_;
          }
          return pipe.work.Work.WorkState.getDefaultInstance();
        }
      }
      /**
       * <code>optional .WorkState state = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.WorkState, pipe.work.Work.WorkState.Builder, pipe.work.Work.WorkStateOrBuilder> 
          getStateFieldBuilder() {
        if (stateBuilder_ == null) {
          if (!(payloadCase_ == 8)) {
            payload_ = pipe.work.Work.WorkState.getDefaultInstance();
          }
          stateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pipe.work.Work.WorkState, pipe.work.Work.WorkState.Builder, pipe.work.Work.WorkStateOrBuilder>(
                  (pipe.work.Work.WorkState) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 8;
        return stateBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pipe.election.Election.LeaderStatus, pipe.election.Election.LeaderStatus.Builder, pipe.election.Election.LeaderStatusOrBuilder> leaderBuilder_;
      /**
       * <code>optional .LeaderStatus leader = 9;</code>
       */
      public boolean hasLeader() {
        return payloadCase_ == 9;
      }
      /**
       * <code>optional .LeaderStatus leader = 9;</code>
       */
      public pipe.election.Election.LeaderStatus getLeader() {
        if (leaderBuilder_ == null) {
          if (payloadCase_ == 9) {
            return (pipe.election.Election.LeaderStatus) payload_;
          }
          return pipe.election.Election.LeaderStatus.getDefaultInstance();
        } else {
          if (payloadCase_ == 9) {
            return leaderBuilder_.getMessage();
          }
          return pipe.election.Election.LeaderStatus.getDefaultInstance();
        }
      }
      /**
       * <code>optional .LeaderStatus leader = 9;</code>
       */
      public Builder setLeader(pipe.election.Election.LeaderStatus value) {
        if (leaderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          leaderBuilder_.setMessage(value);
        }
        payloadCase_ = 9;
        return this;
      }
      /**
       * <code>optional .LeaderStatus leader = 9;</code>
       */
      public Builder setLeader(
          pipe.election.Election.LeaderStatus.Builder builderForValue) {
        if (leaderBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          leaderBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 9;
        return this;
      }
      /**
       * <code>optional .LeaderStatus leader = 9;</code>
       */
      public Builder mergeLeader(pipe.election.Election.LeaderStatus value) {
        if (leaderBuilder_ == null) {
          if (payloadCase_ == 9 &&
              payload_ != pipe.election.Election.LeaderStatus.getDefaultInstance()) {
            payload_ = pipe.election.Election.LeaderStatus.newBuilder((pipe.election.Election.LeaderStatus) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 9) {
            leaderBuilder_.mergeFrom(value);
          }
          leaderBuilder_.setMessage(value);
        }
        payloadCase_ = 9;
        return this;
      }
      /**
       * <code>optional .LeaderStatus leader = 9;</code>
       */
      public Builder clearLeader() {
        if (leaderBuilder_ == null) {
          if (payloadCase_ == 9) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 9) {
            payloadCase_ = 0;
            payload_ = null;
          }
          leaderBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .LeaderStatus leader = 9;</code>
       */
      public pipe.election.Election.LeaderStatus.Builder getLeaderBuilder() {
        return getLeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LeaderStatus leader = 9;</code>
       */
      public pipe.election.Election.LeaderStatusOrBuilder getLeaderOrBuilder() {
        if ((payloadCase_ == 9) && (leaderBuilder_ != null)) {
          return leaderBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 9) {
            return (pipe.election.Election.LeaderStatus) payload_;
          }
          return pipe.election.Election.LeaderStatus.getDefaultInstance();
        }
      }
      /**
       * <code>optional .LeaderStatus leader = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pipe.election.Election.LeaderStatus, pipe.election.Election.LeaderStatus.Builder, pipe.election.Election.LeaderStatusOrBuilder> 
          getLeaderFieldBuilder() {
        if (leaderBuilder_ == null) {
          if (!(payloadCase_ == 9)) {
            payload_ = pipe.election.Election.LeaderStatus.getDefaultInstance();
          }
          leaderBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pipe.election.Election.LeaderStatus, pipe.election.Election.LeaderStatus.Builder, pipe.election.Election.LeaderStatusOrBuilder>(
                  (pipe.election.Election.LeaderStatus) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 9;
        return leaderBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.Discovery, pipe.work.Work.Discovery.Builder, pipe.work.Work.DiscoveryOrBuilder> discoveryBuilder_;
      /**
       * <code>optional .Discovery discovery = 10;</code>
       *
       * <pre>
       *this payload is used while discovering the messages
       * </pre>
       */
      public boolean hasDiscovery() {
        return payloadCase_ == 10;
      }
      /**
       * <code>optional .Discovery discovery = 10;</code>
       *
       * <pre>
       *this payload is used while discovering the messages
       * </pre>
       */
      public pipe.work.Work.Discovery getDiscovery() {
        if (discoveryBuilder_ == null) {
          if (payloadCase_ == 10) {
            return (pipe.work.Work.Discovery) payload_;
          }
          return pipe.work.Work.Discovery.getDefaultInstance();
        } else {
          if (payloadCase_ == 10) {
            return discoveryBuilder_.getMessage();
          }
          return pipe.work.Work.Discovery.getDefaultInstance();
        }
      }
      /**
       * <code>optional .Discovery discovery = 10;</code>
       *
       * <pre>
       *this payload is used while discovering the messages
       * </pre>
       */
      public Builder setDiscovery(pipe.work.Work.Discovery value) {
        if (discoveryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          discoveryBuilder_.setMessage(value);
        }
        payloadCase_ = 10;
        return this;
      }
      /**
       * <code>optional .Discovery discovery = 10;</code>
       *
       * <pre>
       *this payload is used while discovering the messages
       * </pre>
       */
      public Builder setDiscovery(
          pipe.work.Work.Discovery.Builder builderForValue) {
        if (discoveryBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          discoveryBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 10;
        return this;
      }
      /**
       * <code>optional .Discovery discovery = 10;</code>
       *
       * <pre>
       *this payload is used while discovering the messages
       * </pre>
       */
      public Builder mergeDiscovery(pipe.work.Work.Discovery value) {
        if (discoveryBuilder_ == null) {
          if (payloadCase_ == 10 &&
              payload_ != pipe.work.Work.Discovery.getDefaultInstance()) {
            payload_ = pipe.work.Work.Discovery.newBuilder((pipe.work.Work.Discovery) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 10) {
            discoveryBuilder_.mergeFrom(value);
          }
          discoveryBuilder_.setMessage(value);
        }
        payloadCase_ = 10;
        return this;
      }
      /**
       * <code>optional .Discovery discovery = 10;</code>
       *
       * <pre>
       *this payload is used while discovering the messages
       * </pre>
       */
      public Builder clearDiscovery() {
        if (discoveryBuilder_ == null) {
          if (payloadCase_ == 10) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 10) {
            payloadCase_ = 0;
            payload_ = null;
          }
          discoveryBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .Discovery discovery = 10;</code>
       *
       * <pre>
       *this payload is used while discovering the messages
       * </pre>
       */
      public pipe.work.Work.Discovery.Builder getDiscoveryBuilder() {
        return getDiscoveryFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Discovery discovery = 10;</code>
       *
       * <pre>
       *this payload is used while discovering the messages
       * </pre>
       */
      public pipe.work.Work.DiscoveryOrBuilder getDiscoveryOrBuilder() {
        if ((payloadCase_ == 10) && (discoveryBuilder_ != null)) {
          return discoveryBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 10) {
            return (pipe.work.Work.Discovery) payload_;
          }
          return pipe.work.Work.Discovery.getDefaultInstance();
        }
      }
      /**
       * <code>optional .Discovery discovery = 10;</code>
       *
       * <pre>
       *this payload is used while discovering the messages
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.Discovery, pipe.work.Work.Discovery.Builder, pipe.work.Work.DiscoveryOrBuilder> 
          getDiscoveryFieldBuilder() {
        if (discoveryBuilder_ == null) {
          if (!(payloadCase_ == 10)) {
            payload_ = pipe.work.Work.Discovery.getDefaultInstance();
          }
          discoveryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pipe.work.Work.Discovery, pipe.work.Work.Discovery.Builder, pipe.work.Work.DiscoveryOrBuilder>(
                  (pipe.work.Work.Discovery) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 10;
        return discoveryBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pipe.election.Election.LeaderElection, pipe.election.Election.LeaderElection.Builder, pipe.election.Election.LeaderElectionOrBuilder> leaderElectionRequestBuilder_;
      /**
       * <code>optional .LeaderElection leaderElectionRequest = 11;</code>
       */
      public boolean hasLeaderElectionRequest() {
        return payloadCase_ == 11;
      }
      /**
       * <code>optional .LeaderElection leaderElectionRequest = 11;</code>
       */
      public pipe.election.Election.LeaderElection getLeaderElectionRequest() {
        if (leaderElectionRequestBuilder_ == null) {
          if (payloadCase_ == 11) {
            return (pipe.election.Election.LeaderElection) payload_;
          }
          return pipe.election.Election.LeaderElection.getDefaultInstance();
        } else {
          if (payloadCase_ == 11) {
            return leaderElectionRequestBuilder_.getMessage();
          }
          return pipe.election.Election.LeaderElection.getDefaultInstance();
        }
      }
      /**
       * <code>optional .LeaderElection leaderElectionRequest = 11;</code>
       */
      public Builder setLeaderElectionRequest(pipe.election.Election.LeaderElection value) {
        if (leaderElectionRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          leaderElectionRequestBuilder_.setMessage(value);
        }
        payloadCase_ = 11;
        return this;
      }
      /**
       * <code>optional .LeaderElection leaderElectionRequest = 11;</code>
       */
      public Builder setLeaderElectionRequest(
          pipe.election.Election.LeaderElection.Builder builderForValue) {
        if (leaderElectionRequestBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          leaderElectionRequestBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 11;
        return this;
      }
      /**
       * <code>optional .LeaderElection leaderElectionRequest = 11;</code>
       */
      public Builder mergeLeaderElectionRequest(pipe.election.Election.LeaderElection value) {
        if (leaderElectionRequestBuilder_ == null) {
          if (payloadCase_ == 11 &&
              payload_ != pipe.election.Election.LeaderElection.getDefaultInstance()) {
            payload_ = pipe.election.Election.LeaderElection.newBuilder((pipe.election.Election.LeaderElection) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 11) {
            leaderElectionRequestBuilder_.mergeFrom(value);
          }
          leaderElectionRequestBuilder_.setMessage(value);
        }
        payloadCase_ = 11;
        return this;
      }
      /**
       * <code>optional .LeaderElection leaderElectionRequest = 11;</code>
       */
      public Builder clearLeaderElectionRequest() {
        if (leaderElectionRequestBuilder_ == null) {
          if (payloadCase_ == 11) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 11) {
            payloadCase_ = 0;
            payload_ = null;
          }
          leaderElectionRequestBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .LeaderElection leaderElectionRequest = 11;</code>
       */
      public pipe.election.Election.LeaderElection.Builder getLeaderElectionRequestBuilder() {
        return getLeaderElectionRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LeaderElection leaderElectionRequest = 11;</code>
       */
      public pipe.election.Election.LeaderElectionOrBuilder getLeaderElectionRequestOrBuilder() {
        if ((payloadCase_ == 11) && (leaderElectionRequestBuilder_ != null)) {
          return leaderElectionRequestBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 11) {
            return (pipe.election.Election.LeaderElection) payload_;
          }
          return pipe.election.Election.LeaderElection.getDefaultInstance();
        }
      }
      /**
       * <code>optional .LeaderElection leaderElectionRequest = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pipe.election.Election.LeaderElection, pipe.election.Election.LeaderElection.Builder, pipe.election.Election.LeaderElectionOrBuilder> 
          getLeaderElectionRequestFieldBuilder() {
        if (leaderElectionRequestBuilder_ == null) {
          if (!(payloadCase_ == 11)) {
            payload_ = pipe.election.Election.LeaderElection.getDefaultInstance();
          }
          leaderElectionRequestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pipe.election.Election.LeaderElection, pipe.election.Election.LeaderElection.Builder, pipe.election.Election.LeaderElectionOrBuilder>(
                  (pipe.election.Election.LeaderElection) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 11;
        return leaderElectionRequestBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pipe.election.Election.LeaderElectionResponse, pipe.election.Election.LeaderElectionResponse.Builder, pipe.election.Election.LeaderElectionResponseOrBuilder> leaderElectionResponseBuilder_;
      /**
       * <code>optional .LeaderElectionResponse leaderElectionResponse = 12;</code>
       */
      public boolean hasLeaderElectionResponse() {
        return payloadCase_ == 12;
      }
      /**
       * <code>optional .LeaderElectionResponse leaderElectionResponse = 12;</code>
       */
      public pipe.election.Election.LeaderElectionResponse getLeaderElectionResponse() {
        if (leaderElectionResponseBuilder_ == null) {
          if (payloadCase_ == 12) {
            return (pipe.election.Election.LeaderElectionResponse) payload_;
          }
          return pipe.election.Election.LeaderElectionResponse.getDefaultInstance();
        } else {
          if (payloadCase_ == 12) {
            return leaderElectionResponseBuilder_.getMessage();
          }
          return pipe.election.Election.LeaderElectionResponse.getDefaultInstance();
        }
      }
      /**
       * <code>optional .LeaderElectionResponse leaderElectionResponse = 12;</code>
       */
      public Builder setLeaderElectionResponse(pipe.election.Election.LeaderElectionResponse value) {
        if (leaderElectionResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          leaderElectionResponseBuilder_.setMessage(value);
        }
        payloadCase_ = 12;
        return this;
      }
      /**
       * <code>optional .LeaderElectionResponse leaderElectionResponse = 12;</code>
       */
      public Builder setLeaderElectionResponse(
          pipe.election.Election.LeaderElectionResponse.Builder builderForValue) {
        if (leaderElectionResponseBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          leaderElectionResponseBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 12;
        return this;
      }
      /**
       * <code>optional .LeaderElectionResponse leaderElectionResponse = 12;</code>
       */
      public Builder mergeLeaderElectionResponse(pipe.election.Election.LeaderElectionResponse value) {
        if (leaderElectionResponseBuilder_ == null) {
          if (payloadCase_ == 12 &&
              payload_ != pipe.election.Election.LeaderElectionResponse.getDefaultInstance()) {
            payload_ = pipe.election.Election.LeaderElectionResponse.newBuilder((pipe.election.Election.LeaderElectionResponse) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 12) {
            leaderElectionResponseBuilder_.mergeFrom(value);
          }
          leaderElectionResponseBuilder_.setMessage(value);
        }
        payloadCase_ = 12;
        return this;
      }
      /**
       * <code>optional .LeaderElectionResponse leaderElectionResponse = 12;</code>
       */
      public Builder clearLeaderElectionResponse() {
        if (leaderElectionResponseBuilder_ == null) {
          if (payloadCase_ == 12) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 12) {
            payloadCase_ = 0;
            payload_ = null;
          }
          leaderElectionResponseBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .LeaderElectionResponse leaderElectionResponse = 12;</code>
       */
      public pipe.election.Election.LeaderElectionResponse.Builder getLeaderElectionResponseBuilder() {
        return getLeaderElectionResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LeaderElectionResponse leaderElectionResponse = 12;</code>
       */
      public pipe.election.Election.LeaderElectionResponseOrBuilder getLeaderElectionResponseOrBuilder() {
        if ((payloadCase_ == 12) && (leaderElectionResponseBuilder_ != null)) {
          return leaderElectionResponseBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 12) {
            return (pipe.election.Election.LeaderElectionResponse) payload_;
          }
          return pipe.election.Election.LeaderElectionResponse.getDefaultInstance();
        }
      }
      /**
       * <code>optional .LeaderElectionResponse leaderElectionResponse = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pipe.election.Election.LeaderElectionResponse, pipe.election.Election.LeaderElectionResponse.Builder, pipe.election.Election.LeaderElectionResponseOrBuilder> 
          getLeaderElectionResponseFieldBuilder() {
        if (leaderElectionResponseBuilder_ == null) {
          if (!(payloadCase_ == 12)) {
            payload_ = pipe.election.Election.LeaderElectionResponse.getDefaultInstance();
          }
          leaderElectionResponseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pipe.election.Election.LeaderElectionResponse, pipe.election.Election.LeaderElectionResponse.Builder, pipe.election.Election.LeaderElectionResponseOrBuilder>(
                  (pipe.election.Election.LeaderElectionResponse) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 12;
        return leaderElectionResponseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.LogAppendEntry, pipe.work.Work.LogAppendEntry.Builder, pipe.work.Work.LogAppendEntryOrBuilder> logAppendEntriesBuilder_;
      /**
       * <code>optional .LogAppendEntry log_append_entries = 13;</code>
       */
      public boolean hasLogAppendEntries() {
        return payloadCase_ == 13;
      }
      /**
       * <code>optional .LogAppendEntry log_append_entries = 13;</code>
       */
      public pipe.work.Work.LogAppendEntry getLogAppendEntries() {
        if (logAppendEntriesBuilder_ == null) {
          if (payloadCase_ == 13) {
            return (pipe.work.Work.LogAppendEntry) payload_;
          }
          return pipe.work.Work.LogAppendEntry.getDefaultInstance();
        } else {
          if (payloadCase_ == 13) {
            return logAppendEntriesBuilder_.getMessage();
          }
          return pipe.work.Work.LogAppendEntry.getDefaultInstance();
        }
      }
      /**
       * <code>optional .LogAppendEntry log_append_entries = 13;</code>
       */
      public Builder setLogAppendEntries(pipe.work.Work.LogAppendEntry value) {
        if (logAppendEntriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          logAppendEntriesBuilder_.setMessage(value);
        }
        payloadCase_ = 13;
        return this;
      }
      /**
       * <code>optional .LogAppendEntry log_append_entries = 13;</code>
       */
      public Builder setLogAppendEntries(
          pipe.work.Work.LogAppendEntry.Builder builderForValue) {
        if (logAppendEntriesBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          logAppendEntriesBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 13;
        return this;
      }
      /**
       * <code>optional .LogAppendEntry log_append_entries = 13;</code>
       */
      public Builder mergeLogAppendEntries(pipe.work.Work.LogAppendEntry value) {
        if (logAppendEntriesBuilder_ == null) {
          if (payloadCase_ == 13 &&
              payload_ != pipe.work.Work.LogAppendEntry.getDefaultInstance()) {
            payload_ = pipe.work.Work.LogAppendEntry.newBuilder((pipe.work.Work.LogAppendEntry) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 13) {
            logAppendEntriesBuilder_.mergeFrom(value);
          }
          logAppendEntriesBuilder_.setMessage(value);
        }
        payloadCase_ = 13;
        return this;
      }
      /**
       * <code>optional .LogAppendEntry log_append_entries = 13;</code>
       */
      public Builder clearLogAppendEntries() {
        if (logAppendEntriesBuilder_ == null) {
          if (payloadCase_ == 13) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 13) {
            payloadCase_ = 0;
            payload_ = null;
          }
          logAppendEntriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .LogAppendEntry log_append_entries = 13;</code>
       */
      public pipe.work.Work.LogAppendEntry.Builder getLogAppendEntriesBuilder() {
        return getLogAppendEntriesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LogAppendEntry log_append_entries = 13;</code>
       */
      public pipe.work.Work.LogAppendEntryOrBuilder getLogAppendEntriesOrBuilder() {
        if ((payloadCase_ == 13) && (logAppendEntriesBuilder_ != null)) {
          return logAppendEntriesBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 13) {
            return (pipe.work.Work.LogAppendEntry) payload_;
          }
          return pipe.work.Work.LogAppendEntry.getDefaultInstance();
        }
      }
      /**
       * <code>optional .LogAppendEntry log_append_entries = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.LogAppendEntry, pipe.work.Work.LogAppendEntry.Builder, pipe.work.Work.LogAppendEntryOrBuilder> 
          getLogAppendEntriesFieldBuilder() {
        if (logAppendEntriesBuilder_ == null) {
          if (!(payloadCase_ == 13)) {
            payload_ = pipe.work.Work.LogAppendEntry.getDefaultInstance();
          }
          logAppendEntriesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pipe.work.Work.LogAppendEntry, pipe.work.Work.LogAppendEntry.Builder, pipe.work.Work.LogAppendEntryOrBuilder>(
                  (pipe.work.Work.LogAppendEntry) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 13;
        return logAppendEntriesBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.LogAppendResponse, pipe.work.Work.LogAppendResponse.Builder, pipe.work.Work.LogAppendResponseOrBuilder> logAppendResponseBuilder_;
      /**
       * <code>optional .LogAppendResponse logAppendResponse = 14;</code>
       */
      public boolean hasLogAppendResponse() {
        return payloadCase_ == 14;
      }
      /**
       * <code>optional .LogAppendResponse logAppendResponse = 14;</code>
       */
      public pipe.work.Work.LogAppendResponse getLogAppendResponse() {
        if (logAppendResponseBuilder_ == null) {
          if (payloadCase_ == 14) {
            return (pipe.work.Work.LogAppendResponse) payload_;
          }
          return pipe.work.Work.LogAppendResponse.getDefaultInstance();
        } else {
          if (payloadCase_ == 14) {
            return logAppendResponseBuilder_.getMessage();
          }
          return pipe.work.Work.LogAppendResponse.getDefaultInstance();
        }
      }
      /**
       * <code>optional .LogAppendResponse logAppendResponse = 14;</code>
       */
      public Builder setLogAppendResponse(pipe.work.Work.LogAppendResponse value) {
        if (logAppendResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          logAppendResponseBuilder_.setMessage(value);
        }
        payloadCase_ = 14;
        return this;
      }
      /**
       * <code>optional .LogAppendResponse logAppendResponse = 14;</code>
       */
      public Builder setLogAppendResponse(
          pipe.work.Work.LogAppendResponse.Builder builderForValue) {
        if (logAppendResponseBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          logAppendResponseBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 14;
        return this;
      }
      /**
       * <code>optional .LogAppendResponse logAppendResponse = 14;</code>
       */
      public Builder mergeLogAppendResponse(pipe.work.Work.LogAppendResponse value) {
        if (logAppendResponseBuilder_ == null) {
          if (payloadCase_ == 14 &&
              payload_ != pipe.work.Work.LogAppendResponse.getDefaultInstance()) {
            payload_ = pipe.work.Work.LogAppendResponse.newBuilder((pipe.work.Work.LogAppendResponse) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 14) {
            logAppendResponseBuilder_.mergeFrom(value);
          }
          logAppendResponseBuilder_.setMessage(value);
        }
        payloadCase_ = 14;
        return this;
      }
      /**
       * <code>optional .LogAppendResponse logAppendResponse = 14;</code>
       */
      public Builder clearLogAppendResponse() {
        if (logAppendResponseBuilder_ == null) {
          if (payloadCase_ == 14) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 14) {
            payloadCase_ = 0;
            payload_ = null;
          }
          logAppendResponseBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .LogAppendResponse logAppendResponse = 14;</code>
       */
      public pipe.work.Work.LogAppendResponse.Builder getLogAppendResponseBuilder() {
        return getLogAppendResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LogAppendResponse logAppendResponse = 14;</code>
       */
      public pipe.work.Work.LogAppendResponseOrBuilder getLogAppendResponseOrBuilder() {
        if ((payloadCase_ == 14) && (logAppendResponseBuilder_ != null)) {
          return logAppendResponseBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 14) {
            return (pipe.work.Work.LogAppendResponse) payload_;
          }
          return pipe.work.Work.LogAppendResponse.getDefaultInstance();
        }
      }
      /**
       * <code>optional .LogAppendResponse logAppendResponse = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.LogAppendResponse, pipe.work.Work.LogAppendResponse.Builder, pipe.work.Work.LogAppendResponseOrBuilder> 
          getLogAppendResponseFieldBuilder() {
        if (logAppendResponseBuilder_ == null) {
          if (!(payloadCase_ == 14)) {
            payload_ = pipe.work.Work.LogAppendResponse.getDefaultInstance();
          }
          logAppendResponseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pipe.work.Work.LogAppendResponse, pipe.work.Work.LogAppendResponse.Builder, pipe.work.Work.LogAppendResponseOrBuilder>(
                  (pipe.work.Work.LogAppendResponse) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 14;
        return logAppendResponseBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.FileChunkData, pipe.work.Work.FileChunkData.Builder, pipe.work.Work.FileChunkDataOrBuilder> chunkDataBuilder_;
      /**
       * <code>optional .FileChunkData chunk_data = 15;</code>
       */
      public boolean hasChunkData() {
        return payloadCase_ == 15;
      }
      /**
       * <code>optional .FileChunkData chunk_data = 15;</code>
       */
      public pipe.work.Work.FileChunkData getChunkData() {
        if (chunkDataBuilder_ == null) {
          if (payloadCase_ == 15) {
            return (pipe.work.Work.FileChunkData) payload_;
          }
          return pipe.work.Work.FileChunkData.getDefaultInstance();
        } else {
          if (payloadCase_ == 15) {
            return chunkDataBuilder_.getMessage();
          }
          return pipe.work.Work.FileChunkData.getDefaultInstance();
        }
      }
      /**
       * <code>optional .FileChunkData chunk_data = 15;</code>
       */
      public Builder setChunkData(pipe.work.Work.FileChunkData value) {
        if (chunkDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          chunkDataBuilder_.setMessage(value);
        }
        payloadCase_ = 15;
        return this;
      }
      /**
       * <code>optional .FileChunkData chunk_data = 15;</code>
       */
      public Builder setChunkData(
          pipe.work.Work.FileChunkData.Builder builderForValue) {
        if (chunkDataBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          chunkDataBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 15;
        return this;
      }
      /**
       * <code>optional .FileChunkData chunk_data = 15;</code>
       */
      public Builder mergeChunkData(pipe.work.Work.FileChunkData value) {
        if (chunkDataBuilder_ == null) {
          if (payloadCase_ == 15 &&
              payload_ != pipe.work.Work.FileChunkData.getDefaultInstance()) {
            payload_ = pipe.work.Work.FileChunkData.newBuilder((pipe.work.Work.FileChunkData) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 15) {
            chunkDataBuilder_.mergeFrom(value);
          }
          chunkDataBuilder_.setMessage(value);
        }
        payloadCase_ = 15;
        return this;
      }
      /**
       * <code>optional .FileChunkData chunk_data = 15;</code>
       */
      public Builder clearChunkData() {
        if (chunkDataBuilder_ == null) {
          if (payloadCase_ == 15) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 15) {
            payloadCase_ = 0;
            payload_ = null;
          }
          chunkDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .FileChunkData chunk_data = 15;</code>
       */
      public pipe.work.Work.FileChunkData.Builder getChunkDataBuilder() {
        return getChunkDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .FileChunkData chunk_data = 15;</code>
       */
      public pipe.work.Work.FileChunkDataOrBuilder getChunkDataOrBuilder() {
        if ((payloadCase_ == 15) && (chunkDataBuilder_ != null)) {
          return chunkDataBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 15) {
            return (pipe.work.Work.FileChunkData) payload_;
          }
          return pipe.work.Work.FileChunkData.getDefaultInstance();
        }
      }
      /**
       * <code>optional .FileChunkData chunk_data = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.FileChunkData, pipe.work.Work.FileChunkData.Builder, pipe.work.Work.FileChunkDataOrBuilder> 
          getChunkDataFieldBuilder() {
        if (chunkDataBuilder_ == null) {
          if (!(payloadCase_ == 15)) {
            payload_ = pipe.work.Work.FileChunkData.getDefaultInstance();
          }
          chunkDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pipe.work.Work.FileChunkData, pipe.work.Work.FileChunkData.Builder, pipe.work.Work.FileChunkDataOrBuilder>(
                  (pipe.work.Work.FileChunkData) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 15;
        return chunkDataBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.WorkMessage, pipe.work.Work.WorkMessage.Builder, pipe.work.Work.WorkMessageOrBuilder> stolenWorkBuilder_;
      /**
       * <code>optional .WorkMessage stolenWork = 16;</code>
       */
      public boolean hasStolenWork() {
        return payloadCase_ == 16;
      }
      /**
       * <code>optional .WorkMessage stolenWork = 16;</code>
       */
      public pipe.work.Work.WorkMessage getStolenWork() {
        if (stolenWorkBuilder_ == null) {
          if (payloadCase_ == 16) {
            return (pipe.work.Work.WorkMessage) payload_;
          }
          return pipe.work.Work.WorkMessage.getDefaultInstance();
        } else {
          if (payloadCase_ == 16) {
            return stolenWorkBuilder_.getMessage();
          }
          return pipe.work.Work.WorkMessage.getDefaultInstance();
        }
      }
      /**
       * <code>optional .WorkMessage stolenWork = 16;</code>
       */
      public Builder setStolenWork(pipe.work.Work.WorkMessage value) {
        if (stolenWorkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          payload_ = value;
          onChanged();
        } else {
          stolenWorkBuilder_.setMessage(value);
        }
        payloadCase_ = 16;
        return this;
      }
      /**
       * <code>optional .WorkMessage stolenWork = 16;</code>
       */
      public Builder setStolenWork(
          pipe.work.Work.WorkMessage.Builder builderForValue) {
        if (stolenWorkBuilder_ == null) {
          payload_ = builderForValue.build();
          onChanged();
        } else {
          stolenWorkBuilder_.setMessage(builderForValue.build());
        }
        payloadCase_ = 16;
        return this;
      }
      /**
       * <code>optional .WorkMessage stolenWork = 16;</code>
       */
      public Builder mergeStolenWork(pipe.work.Work.WorkMessage value) {
        if (stolenWorkBuilder_ == null) {
          if (payloadCase_ == 16 &&
              payload_ != pipe.work.Work.WorkMessage.getDefaultInstance()) {
            payload_ = pipe.work.Work.WorkMessage.newBuilder((pipe.work.Work.WorkMessage) payload_)
                .mergeFrom(value).buildPartial();
          } else {
            payload_ = value;
          }
          onChanged();
        } else {
          if (payloadCase_ == 16) {
            stolenWorkBuilder_.mergeFrom(value);
          }
          stolenWorkBuilder_.setMessage(value);
        }
        payloadCase_ = 16;
        return this;
      }
      /**
       * <code>optional .WorkMessage stolenWork = 16;</code>
       */
      public Builder clearStolenWork() {
        if (stolenWorkBuilder_ == null) {
          if (payloadCase_ == 16) {
            payloadCase_ = 0;
            payload_ = null;
            onChanged();
          }
        } else {
          if (payloadCase_ == 16) {
            payloadCase_ = 0;
            payload_ = null;
          }
          stolenWorkBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .WorkMessage stolenWork = 16;</code>
       */
      public pipe.work.Work.WorkMessage.Builder getStolenWorkBuilder() {
        return getStolenWorkFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .WorkMessage stolenWork = 16;</code>
       */
      public pipe.work.Work.WorkMessageOrBuilder getStolenWorkOrBuilder() {
        if ((payloadCase_ == 16) && (stolenWorkBuilder_ != null)) {
          return stolenWorkBuilder_.getMessageOrBuilder();
        } else {
          if (payloadCase_ == 16) {
            return (pipe.work.Work.WorkMessage) payload_;
          }
          return pipe.work.Work.WorkMessage.getDefaultInstance();
        }
      }
      /**
       * <code>optional .WorkMessage stolenWork = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.WorkMessage, pipe.work.Work.WorkMessage.Builder, pipe.work.Work.WorkMessageOrBuilder> 
          getStolenWorkFieldBuilder() {
        if (stolenWorkBuilder_ == null) {
          if (!(payloadCase_ == 16)) {
            payload_ = pipe.work.Work.WorkMessage.getDefaultInstance();
          }
          stolenWorkBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pipe.work.Work.WorkMessage, pipe.work.Work.WorkMessage.Builder, pipe.work.Work.WorkMessageOrBuilder>(
                  (pipe.work.Work.WorkMessage) payload_,
                  getParentForChildren(),
                  isClean());
          payload_ = null;
        }
        payloadCase_ = 16;
        return stolenWorkBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:WorkMessage)
    }

    static {
      defaultInstance = new WorkMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:WorkMessage)
  }

  public interface CommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Command)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string key = 1;</code>
     */
    boolean hasKey();
    /**
     * <code>required string key = 1;</code>
     */
    java.lang.String getKey();
    /**
     * <code>required string key = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>required string value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>required string value = 2;</code>
     */
    java.lang.String getValue();
    /**
     * <code>required string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <code>required int32 client_id = 3;</code>
     */
    boolean hasClientId();
    /**
     * <code>required int32 client_id = 3;</code>
     */
    int getClientId();
  }
  /**
   * Protobuf type {@code Command}
   */
  public static final class Command extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Command)
      CommandOrBuilder {
    // Use Command.newBuilder() to construct.
    private Command(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Command(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Command defaultInstance;
    public static Command getDefaultInstance() {
      return defaultInstance;
    }

    public Command getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Command(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              key_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              value_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              clientId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pipe.work.Work.internal_static_Command_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pipe.work.Work.internal_static_Command_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pipe.work.Work.Command.class, pipe.work.Work.Command.Builder.class);
    }

    public static com.google.protobuf.Parser<Command> PARSER =
        new com.google.protobuf.AbstractParser<Command>() {
      public Command parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Command(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Command> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int KEY_FIELD_NUMBER = 1;
    private java.lang.Object key_;
    /**
     * <code>required string key = 1;</code>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string key = 1;</code>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          key_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private java.lang.Object value_;
    /**
     * <code>required string value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string value = 2;</code>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLIENT_ID_FIELD_NUMBER = 3;
    private int clientId_;
    /**
     * <code>required int32 client_id = 3;</code>
     */
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 client_id = 3;</code>
     */
    public int getClientId() {
      return clientId_;
    }

    private void initFields() {
      key_ = "";
      value_ = "";
      clientId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClientId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getValueBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, clientId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getValueBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, clientId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pipe.work.Work.Command parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.Command parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.Command parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.Command parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.Command parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.Command parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.Command parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pipe.work.Work.Command parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.Command parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.Command parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pipe.work.Work.Command prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Command}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Command)
        pipe.work.Work.CommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pipe.work.Work.internal_static_Command_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pipe.work.Work.internal_static_Command_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pipe.work.Work.Command.class, pipe.work.Work.Command.Builder.class);
      }

      // Construct using pipe.work.Work.Command.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        clientId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pipe.work.Work.internal_static_Command_descriptor;
      }

      public pipe.work.Work.Command getDefaultInstanceForType() {
        return pipe.work.Work.Command.getDefaultInstance();
      }

      public pipe.work.Work.Command build() {
        pipe.work.Work.Command result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pipe.work.Work.Command buildPartial() {
        pipe.work.Work.Command result = new pipe.work.Work.Command(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientId_ = clientId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pipe.work.Work.Command) {
          return mergeFrom((pipe.work.Work.Command)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pipe.work.Work.Command other) {
        if (other == pipe.work.Work.Command.getDefaultInstance()) return this;
        if (other.hasKey()) {
          bitField0_ |= 0x00000001;
          key_ = other.key_;
          onChanged();
        }
        if (other.hasValue()) {
          bitField0_ |= 0x00000002;
          value_ = other.value_;
          onChanged();
        }
        if (other.hasClientId()) {
          setClientId(other.getClientId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKey()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        if (!hasClientId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pipe.work.Work.Command parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pipe.work.Work.Command) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <code>required string key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string key = 1;</code>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            key_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string key = 1;</code>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 1;</code>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 1;</code>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>required string value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            value_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }

      private int clientId_ ;
      /**
       * <code>required int32 client_id = 3;</code>
       */
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 client_id = 3;</code>
       */
      public int getClientId() {
        return clientId_;
      }
      /**
       * <code>required int32 client_id = 3;</code>
       */
      public Builder setClientId(int value) {
        bitField0_ |= 0x00000004;
        clientId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 client_id = 3;</code>
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Command)
    }

    static {
      defaultInstance = new Command(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Command)
  }

  public interface LogEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LogEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .LogEntry.DataAction action = 1;</code>
     */
    boolean hasAction();
    /**
     * <code>required .LogEntry.DataAction action = 1;</code>
     */
    pipe.work.Work.LogEntry.DataAction getAction();

    /**
     * <code>repeated .Command data = 2;</code>
     */
    java.util.List<pipe.work.Work.Command> 
        getDataList();
    /**
     * <code>repeated .Command data = 2;</code>
     */
    pipe.work.Work.Command getData(int index);
    /**
     * <code>repeated .Command data = 2;</code>
     */
    int getDataCount();
    /**
     * <code>repeated .Command data = 2;</code>
     */
    java.util.List<? extends pipe.work.Work.CommandOrBuilder> 
        getDataOrBuilderList();
    /**
     * <code>repeated .Command data = 2;</code>
     */
    pipe.work.Work.CommandOrBuilder getDataOrBuilder(
        int index);

    /**
     * <code>required int32 term = 3;</code>
     */
    boolean hasTerm();
    /**
     * <code>required int32 term = 3;</code>
     */
    int getTerm();

    /**
     * <code>required int32 logId = 4;</code>
     */
    boolean hasLogId();
    /**
     * <code>required int32 logId = 4;</code>
     */
    int getLogId();
  }
  /**
   * Protobuf type {@code LogEntry}
   */
  public static final class LogEntry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:LogEntry)
      LogEntryOrBuilder {
    // Use LogEntry.newBuilder() to construct.
    private LogEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LogEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LogEntry defaultInstance;
    public static LogEntry getDefaultInstance() {
      return defaultInstance;
    }

    public LogEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LogEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              pipe.work.Work.LogEntry.DataAction value = pipe.work.Work.LogEntry.DataAction.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                action_ = value;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                data_ = new java.util.ArrayList<pipe.work.Work.Command>();
                mutable_bitField0_ |= 0x00000002;
              }
              data_.add(input.readMessage(pipe.work.Work.Command.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              term_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              logId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          data_ = java.util.Collections.unmodifiableList(data_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pipe.work.Work.internal_static_LogEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pipe.work.Work.internal_static_LogEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pipe.work.Work.LogEntry.class, pipe.work.Work.LogEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<LogEntry> PARSER =
        new com.google.protobuf.AbstractParser<LogEntry>() {
      public LogEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LogEntry> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code LogEntry.DataAction}
     */
    public enum DataAction
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INSERT = 1;</code>
       */
      INSERT(0, 1),
      /**
       * <code>UPDATE = 2;</code>
       */
      UPDATE(1, 2),
      ;

      /**
       * <code>INSERT = 1;</code>
       */
      public static final int INSERT_VALUE = 1;
      /**
       * <code>UPDATE = 2;</code>
       */
      public static final int UPDATE_VALUE = 2;


      public final int getNumber() { return value; }

      public static DataAction valueOf(int value) {
        switch (value) {
          case 1: return INSERT;
          case 2: return UPDATE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DataAction>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<DataAction>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DataAction>() {
              public DataAction findValueByNumber(int number) {
                return DataAction.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return pipe.work.Work.LogEntry.getDescriptor().getEnumTypes().get(0);
      }

      private static final DataAction[] VALUES = values();

      public static DataAction valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private DataAction(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:LogEntry.DataAction)
    }

    private int bitField0_;
    public static final int ACTION_FIELD_NUMBER = 1;
    private pipe.work.Work.LogEntry.DataAction action_;
    /**
     * <code>required .LogEntry.DataAction action = 1;</code>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .LogEntry.DataAction action = 1;</code>
     */
    public pipe.work.Work.LogEntry.DataAction getAction() {
      return action_;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private java.util.List<pipe.work.Work.Command> data_;
    /**
     * <code>repeated .Command data = 2;</code>
     */
    public java.util.List<pipe.work.Work.Command> getDataList() {
      return data_;
    }
    /**
     * <code>repeated .Command data = 2;</code>
     */
    public java.util.List<? extends pipe.work.Work.CommandOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <code>repeated .Command data = 2;</code>
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated .Command data = 2;</code>
     */
    public pipe.work.Work.Command getData(int index) {
      return data_.get(index);
    }
    /**
     * <code>repeated .Command data = 2;</code>
     */
    public pipe.work.Work.CommandOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    public static final int TERM_FIELD_NUMBER = 3;
    private int term_;
    /**
     * <code>required int32 term = 3;</code>
     */
    public boolean hasTerm() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 term = 3;</code>
     */
    public int getTerm() {
      return term_;
    }

    public static final int LOGID_FIELD_NUMBER = 4;
    private int logId_;
    /**
     * <code>required int32 logId = 4;</code>
     */
    public boolean hasLogId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 logId = 4;</code>
     */
    public int getLogId() {
      return logId_;
    }

    private void initFields() {
      action_ = pipe.work.Work.LogEntry.DataAction.INSERT;
      data_ = java.util.Collections.emptyList();
      term_ = 0;
      logId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasAction()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTerm()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLogId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDataCount(); i++) {
        if (!getData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, action_.getNumber());
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(2, data_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, term_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, logId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, action_.getNumber());
      }
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, data_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, term_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, logId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pipe.work.Work.LogEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.LogEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.LogEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.LogEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.LogEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.LogEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.LogEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pipe.work.Work.LogEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.LogEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.LogEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pipe.work.Work.LogEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LogEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LogEntry)
        pipe.work.Work.LogEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pipe.work.Work.internal_static_LogEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pipe.work.Work.internal_static_LogEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pipe.work.Work.LogEntry.class, pipe.work.Work.LogEntry.Builder.class);
      }

      // Construct using pipe.work.Work.LogEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        action_ = pipe.work.Work.LogEntry.DataAction.INSERT;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          dataBuilder_.clear();
        }
        term_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        logId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pipe.work.Work.internal_static_LogEntry_descriptor;
      }

      public pipe.work.Work.LogEntry getDefaultInstanceForType() {
        return pipe.work.Work.LogEntry.getDefaultInstance();
      }

      public pipe.work.Work.LogEntry build() {
        pipe.work.Work.LogEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pipe.work.Work.LogEntry buildPartial() {
        pipe.work.Work.LogEntry result = new pipe.work.Work.LogEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.action_ = action_;
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.term_ = term_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.logId_ = logId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pipe.work.Work.LogEntry) {
          return mergeFrom((pipe.work.Work.LogEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pipe.work.Work.LogEntry other) {
        if (other == pipe.work.Work.LogEntry.getDefaultInstance()) return this;
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000002);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        if (other.hasTerm()) {
          setTerm(other.getTerm());
        }
        if (other.hasLogId()) {
          setLogId(other.getLogId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAction()) {
          
          return false;
        }
        if (!hasTerm()) {
          
          return false;
        }
        if (!hasLogId()) {
          
          return false;
        }
        for (int i = 0; i < getDataCount(); i++) {
          if (!getData(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pipe.work.Work.LogEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pipe.work.Work.LogEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private pipe.work.Work.LogEntry.DataAction action_ = pipe.work.Work.LogEntry.DataAction.INSERT;
      /**
       * <code>required .LogEntry.DataAction action = 1;</code>
       */
      public boolean hasAction() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .LogEntry.DataAction action = 1;</code>
       */
      public pipe.work.Work.LogEntry.DataAction getAction() {
        return action_;
      }
      /**
       * <code>required .LogEntry.DataAction action = 1;</code>
       */
      public Builder setAction(pipe.work.Work.LogEntry.DataAction value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        action_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .LogEntry.DataAction action = 1;</code>
       */
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000001);
        action_ = pipe.work.Work.LogEntry.DataAction.INSERT;
        onChanged();
        return this;
      }

      private java.util.List<pipe.work.Work.Command> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          data_ = new java.util.ArrayList<pipe.work.Work.Command>(data_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pipe.work.Work.Command, pipe.work.Work.Command.Builder, pipe.work.Work.CommandOrBuilder> dataBuilder_;

      /**
       * <code>repeated .Command data = 2;</code>
       */
      public java.util.List<pipe.work.Work.Command> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Command data = 2;</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Command data = 2;</code>
       */
      public pipe.work.Work.Command getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Command data = 2;</code>
       */
      public Builder setData(
          int index, pipe.work.Work.Command value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Command data = 2;</code>
       */
      public Builder setData(
          int index, pipe.work.Work.Command.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Command data = 2;</code>
       */
      public Builder addData(pipe.work.Work.Command value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Command data = 2;</code>
       */
      public Builder addData(
          int index, pipe.work.Work.Command value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Command data = 2;</code>
       */
      public Builder addData(
          pipe.work.Work.Command.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Command data = 2;</code>
       */
      public Builder addData(
          int index, pipe.work.Work.Command.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Command data = 2;</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends pipe.work.Work.Command> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Command data = 2;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Command data = 2;</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Command data = 2;</code>
       */
      public pipe.work.Work.Command.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Command data = 2;</code>
       */
      public pipe.work.Work.CommandOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Command data = 2;</code>
       */
      public java.util.List<? extends pipe.work.Work.CommandOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <code>repeated .Command data = 2;</code>
       */
      public pipe.work.Work.Command.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            pipe.work.Work.Command.getDefaultInstance());
      }
      /**
       * <code>repeated .Command data = 2;</code>
       */
      public pipe.work.Work.Command.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, pipe.work.Work.Command.getDefaultInstance());
      }
      /**
       * <code>repeated .Command data = 2;</code>
       */
      public java.util.List<pipe.work.Work.Command.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pipe.work.Work.Command, pipe.work.Work.Command.Builder, pipe.work.Work.CommandOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pipe.work.Work.Command, pipe.work.Work.Command.Builder, pipe.work.Work.CommandOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      private int term_ ;
      /**
       * <code>required int32 term = 3;</code>
       */
      public boolean hasTerm() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 term = 3;</code>
       */
      public int getTerm() {
        return term_;
      }
      /**
       * <code>required int32 term = 3;</code>
       */
      public Builder setTerm(int value) {
        bitField0_ |= 0x00000004;
        term_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 term = 3;</code>
       */
      public Builder clearTerm() {
        bitField0_ = (bitField0_ & ~0x00000004);
        term_ = 0;
        onChanged();
        return this;
      }

      private int logId_ ;
      /**
       * <code>required int32 logId = 4;</code>
       */
      public boolean hasLogId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 logId = 4;</code>
       */
      public int getLogId() {
        return logId_;
      }
      /**
       * <code>required int32 logId = 4;</code>
       */
      public Builder setLogId(int value) {
        bitField0_ |= 0x00000008;
        logId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 logId = 4;</code>
       */
      public Builder clearLogId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        logId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LogEntry)
    }

    static {
      defaultInstance = new LogEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LogEntry)
  }

  public interface LogEntryListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LogEntryList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .LogEntry entry = 1;</code>
     */
    java.util.List<pipe.work.Work.LogEntry> 
        getEntryList();
    /**
     * <code>repeated .LogEntry entry = 1;</code>
     */
    pipe.work.Work.LogEntry getEntry(int index);
    /**
     * <code>repeated .LogEntry entry = 1;</code>
     */
    int getEntryCount();
    /**
     * <code>repeated .LogEntry entry = 1;</code>
     */
    java.util.List<? extends pipe.work.Work.LogEntryOrBuilder> 
        getEntryOrBuilderList();
    /**
     * <code>repeated .LogEntry entry = 1;</code>
     */
    pipe.work.Work.LogEntryOrBuilder getEntryOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code LogEntryList}
   *
   * <pre>
   * add log entry array message
   * </pre>
   */
  public static final class LogEntryList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:LogEntryList)
      LogEntryListOrBuilder {
    // Use LogEntryList.newBuilder() to construct.
    private LogEntryList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LogEntryList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LogEntryList defaultInstance;
    public static LogEntryList getDefaultInstance() {
      return defaultInstance;
    }

    public LogEntryList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LogEntryList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                entry_ = new java.util.ArrayList<pipe.work.Work.LogEntry>();
                mutable_bitField0_ |= 0x00000001;
              }
              entry_.add(input.readMessage(pipe.work.Work.LogEntry.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          entry_ = java.util.Collections.unmodifiableList(entry_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pipe.work.Work.internal_static_LogEntryList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pipe.work.Work.internal_static_LogEntryList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pipe.work.Work.LogEntryList.class, pipe.work.Work.LogEntryList.Builder.class);
    }

    public static com.google.protobuf.Parser<LogEntryList> PARSER =
        new com.google.protobuf.AbstractParser<LogEntryList>() {
      public LogEntryList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogEntryList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LogEntryList> getParserForType() {
      return PARSER;
    }

    public static final int ENTRY_FIELD_NUMBER = 1;
    private java.util.List<pipe.work.Work.LogEntry> entry_;
    /**
     * <code>repeated .LogEntry entry = 1;</code>
     */
    public java.util.List<pipe.work.Work.LogEntry> getEntryList() {
      return entry_;
    }
    /**
     * <code>repeated .LogEntry entry = 1;</code>
     */
    public java.util.List<? extends pipe.work.Work.LogEntryOrBuilder> 
        getEntryOrBuilderList() {
      return entry_;
    }
    /**
     * <code>repeated .LogEntry entry = 1;</code>
     */
    public int getEntryCount() {
      return entry_.size();
    }
    /**
     * <code>repeated .LogEntry entry = 1;</code>
     */
    public pipe.work.Work.LogEntry getEntry(int index) {
      return entry_.get(index);
    }
    /**
     * <code>repeated .LogEntry entry = 1;</code>
     */
    public pipe.work.Work.LogEntryOrBuilder getEntryOrBuilder(
        int index) {
      return entry_.get(index);
    }

    private void initFields() {
      entry_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getEntryCount(); i++) {
        if (!getEntry(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < entry_.size(); i++) {
        output.writeMessage(1, entry_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < entry_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, entry_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pipe.work.Work.LogEntryList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.LogEntryList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.LogEntryList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.LogEntryList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.LogEntryList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.LogEntryList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.LogEntryList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pipe.work.Work.LogEntryList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.LogEntryList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.LogEntryList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pipe.work.Work.LogEntryList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LogEntryList}
     *
     * <pre>
     * add log entry array message
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LogEntryList)
        pipe.work.Work.LogEntryListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pipe.work.Work.internal_static_LogEntryList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pipe.work.Work.internal_static_LogEntryList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pipe.work.Work.LogEntryList.class, pipe.work.Work.LogEntryList.Builder.class);
      }

      // Construct using pipe.work.Work.LogEntryList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEntryFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (entryBuilder_ == null) {
          entry_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          entryBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pipe.work.Work.internal_static_LogEntryList_descriptor;
      }

      public pipe.work.Work.LogEntryList getDefaultInstanceForType() {
        return pipe.work.Work.LogEntryList.getDefaultInstance();
      }

      public pipe.work.Work.LogEntryList build() {
        pipe.work.Work.LogEntryList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pipe.work.Work.LogEntryList buildPartial() {
        pipe.work.Work.LogEntryList result = new pipe.work.Work.LogEntryList(this);
        int from_bitField0_ = bitField0_;
        if (entryBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            entry_ = java.util.Collections.unmodifiableList(entry_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.entry_ = entry_;
        } else {
          result.entry_ = entryBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pipe.work.Work.LogEntryList) {
          return mergeFrom((pipe.work.Work.LogEntryList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pipe.work.Work.LogEntryList other) {
        if (other == pipe.work.Work.LogEntryList.getDefaultInstance()) return this;
        if (entryBuilder_ == null) {
          if (!other.entry_.isEmpty()) {
            if (entry_.isEmpty()) {
              entry_ = other.entry_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEntryIsMutable();
              entry_.addAll(other.entry_);
            }
            onChanged();
          }
        } else {
          if (!other.entry_.isEmpty()) {
            if (entryBuilder_.isEmpty()) {
              entryBuilder_.dispose();
              entryBuilder_ = null;
              entry_ = other.entry_;
              bitField0_ = (bitField0_ & ~0x00000001);
              entryBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEntryFieldBuilder() : null;
            } else {
              entryBuilder_.addAllMessages(other.entry_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getEntryCount(); i++) {
          if (!getEntry(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pipe.work.Work.LogEntryList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pipe.work.Work.LogEntryList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<pipe.work.Work.LogEntry> entry_ =
        java.util.Collections.emptyList();
      private void ensureEntryIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          entry_ = new java.util.ArrayList<pipe.work.Work.LogEntry>(entry_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pipe.work.Work.LogEntry, pipe.work.Work.LogEntry.Builder, pipe.work.Work.LogEntryOrBuilder> entryBuilder_;

      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public java.util.List<pipe.work.Work.LogEntry> getEntryList() {
        if (entryBuilder_ == null) {
          return java.util.Collections.unmodifiableList(entry_);
        } else {
          return entryBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public int getEntryCount() {
        if (entryBuilder_ == null) {
          return entry_.size();
        } else {
          return entryBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public pipe.work.Work.LogEntry getEntry(int index) {
        if (entryBuilder_ == null) {
          return entry_.get(index);
        } else {
          return entryBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public Builder setEntry(
          int index, pipe.work.Work.LogEntry value) {
        if (entryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntryIsMutable();
          entry_.set(index, value);
          onChanged();
        } else {
          entryBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public Builder setEntry(
          int index, pipe.work.Work.LogEntry.Builder builderForValue) {
        if (entryBuilder_ == null) {
          ensureEntryIsMutable();
          entry_.set(index, builderForValue.build());
          onChanged();
        } else {
          entryBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public Builder addEntry(pipe.work.Work.LogEntry value) {
        if (entryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntryIsMutable();
          entry_.add(value);
          onChanged();
        } else {
          entryBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public Builder addEntry(
          int index, pipe.work.Work.LogEntry value) {
        if (entryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntryIsMutable();
          entry_.add(index, value);
          onChanged();
        } else {
          entryBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public Builder addEntry(
          pipe.work.Work.LogEntry.Builder builderForValue) {
        if (entryBuilder_ == null) {
          ensureEntryIsMutable();
          entry_.add(builderForValue.build());
          onChanged();
        } else {
          entryBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public Builder addEntry(
          int index, pipe.work.Work.LogEntry.Builder builderForValue) {
        if (entryBuilder_ == null) {
          ensureEntryIsMutable();
          entry_.add(index, builderForValue.build());
          onChanged();
        } else {
          entryBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public Builder addAllEntry(
          java.lang.Iterable<? extends pipe.work.Work.LogEntry> values) {
        if (entryBuilder_ == null) {
          ensureEntryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, entry_);
          onChanged();
        } else {
          entryBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public Builder clearEntry() {
        if (entryBuilder_ == null) {
          entry_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          entryBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public Builder removeEntry(int index) {
        if (entryBuilder_ == null) {
          ensureEntryIsMutable();
          entry_.remove(index);
          onChanged();
        } else {
          entryBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public pipe.work.Work.LogEntry.Builder getEntryBuilder(
          int index) {
        return getEntryFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public pipe.work.Work.LogEntryOrBuilder getEntryOrBuilder(
          int index) {
        if (entryBuilder_ == null) {
          return entry_.get(index);  } else {
          return entryBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public java.util.List<? extends pipe.work.Work.LogEntryOrBuilder> 
           getEntryOrBuilderList() {
        if (entryBuilder_ != null) {
          return entryBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(entry_);
        }
      }
      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public pipe.work.Work.LogEntry.Builder addEntryBuilder() {
        return getEntryFieldBuilder().addBuilder(
            pipe.work.Work.LogEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public pipe.work.Work.LogEntry.Builder addEntryBuilder(
          int index) {
        return getEntryFieldBuilder().addBuilder(
            index, pipe.work.Work.LogEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .LogEntry entry = 1;</code>
       */
      public java.util.List<pipe.work.Work.LogEntry.Builder> 
           getEntryBuilderList() {
        return getEntryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pipe.work.Work.LogEntry, pipe.work.Work.LogEntry.Builder, pipe.work.Work.LogEntryOrBuilder> 
          getEntryFieldBuilder() {
        if (entryBuilder_ == null) {
          entryBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pipe.work.Work.LogEntry, pipe.work.Work.LogEntry.Builder, pipe.work.Work.LogEntryOrBuilder>(
                  entry_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          entry_ = null;
        }
        return entryBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:LogEntryList)
    }

    static {
      defaultInstance = new LogEntryList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LogEntryList)
  }

  public interface LogAppendEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LogAppendEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 election_term = 1;</code>
     */
    boolean hasElectionTerm();
    /**
     * <code>required int32 election_term = 1;</code>
     */
    int getElectionTerm();

    /**
     * <code>optional int32 leader_node_id = 2;</code>
     */
    boolean hasLeaderNodeId();
    /**
     * <code>optional int32 leader_node_id = 2;</code>
     */
    int getLeaderNodeId();

    /**
     * <code>optional int32 prev_log_index = 3;</code>
     */
    boolean hasPrevLogIndex();
    /**
     * <code>optional int32 prev_log_index = 3;</code>
     */
    int getPrevLogIndex();

    /**
     * <code>optional int32 prev_log_term = 4;</code>
     */
    boolean hasPrevLogTerm();
    /**
     * <code>optional int32 prev_log_term = 4;</code>
     */
    int getPrevLogTerm();

    /**
     * <code>optional int32 leader_commit_index = 5;</code>
     */
    boolean hasLeaderCommitIndex();
    /**
     * <code>optional int32 leader_commit_index = 5;</code>
     */
    int getLeaderCommitIndex();

    /**
     * <code>optional .LogEntryList entrylist = 6;</code>
     */
    boolean hasEntrylist();
    /**
     * <code>optional .LogEntryList entrylist = 6;</code>
     */
    pipe.work.Work.LogEntryList getEntrylist();
    /**
     * <code>optional .LogEntryList entrylist = 6;</code>
     */
    pipe.work.Work.LogEntryListOrBuilder getEntrylistOrBuilder();

    /**
     * <code>optional bool success = 7;</code>
     */
    boolean hasSuccess();
    /**
     * <code>optional bool success = 7;</code>
     */
    boolean getSuccess();

    /**
     * <code>optional bool isHeartBeat = 8;</code>
     */
    boolean hasIsHeartBeat();
    /**
     * <code>optional bool isHeartBeat = 8;</code>
     */
    boolean getIsHeartBeat();
  }
  /**
   * Protobuf type {@code LogAppendEntry}
   */
  public static final class LogAppendEntry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:LogAppendEntry)
      LogAppendEntryOrBuilder {
    // Use LogAppendEntry.newBuilder() to construct.
    private LogAppendEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LogAppendEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LogAppendEntry defaultInstance;
    public static LogAppendEntry getDefaultInstance() {
      return defaultInstance;
    }

    public LogAppendEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LogAppendEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              electionTerm_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              leaderNodeId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              prevLogIndex_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              prevLogTerm_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              leaderCommitIndex_ = input.readInt32();
              break;
            }
            case 50: {
              pipe.work.Work.LogEntryList.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = entrylist_.toBuilder();
              }
              entrylist_ = input.readMessage(pipe.work.Work.LogEntryList.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(entrylist_);
                entrylist_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              success_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              isHeartBeat_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pipe.work.Work.internal_static_LogAppendEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pipe.work.Work.internal_static_LogAppendEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pipe.work.Work.LogAppendEntry.class, pipe.work.Work.LogAppendEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<LogAppendEntry> PARSER =
        new com.google.protobuf.AbstractParser<LogAppendEntry>() {
      public LogAppendEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogAppendEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LogAppendEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ELECTION_TERM_FIELD_NUMBER = 1;
    private int electionTerm_;
    /**
     * <code>required int32 election_term = 1;</code>
     */
    public boolean hasElectionTerm() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 election_term = 1;</code>
     */
    public int getElectionTerm() {
      return electionTerm_;
    }

    public static final int LEADER_NODE_ID_FIELD_NUMBER = 2;
    private int leaderNodeId_;
    /**
     * <code>optional int32 leader_node_id = 2;</code>
     */
    public boolean hasLeaderNodeId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 leader_node_id = 2;</code>
     */
    public int getLeaderNodeId() {
      return leaderNodeId_;
    }

    public static final int PREV_LOG_INDEX_FIELD_NUMBER = 3;
    private int prevLogIndex_;
    /**
     * <code>optional int32 prev_log_index = 3;</code>
     */
    public boolean hasPrevLogIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 prev_log_index = 3;</code>
     */
    public int getPrevLogIndex() {
      return prevLogIndex_;
    }

    public static final int PREV_LOG_TERM_FIELD_NUMBER = 4;
    private int prevLogTerm_;
    /**
     * <code>optional int32 prev_log_term = 4;</code>
     */
    public boolean hasPrevLogTerm() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 prev_log_term = 4;</code>
     */
    public int getPrevLogTerm() {
      return prevLogTerm_;
    }

    public static final int LEADER_COMMIT_INDEX_FIELD_NUMBER = 5;
    private int leaderCommitIndex_;
    /**
     * <code>optional int32 leader_commit_index = 5;</code>
     */
    public boolean hasLeaderCommitIndex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 leader_commit_index = 5;</code>
     */
    public int getLeaderCommitIndex() {
      return leaderCommitIndex_;
    }

    public static final int ENTRYLIST_FIELD_NUMBER = 6;
    private pipe.work.Work.LogEntryList entrylist_;
    /**
     * <code>optional .LogEntryList entrylist = 6;</code>
     */
    public boolean hasEntrylist() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .LogEntryList entrylist = 6;</code>
     */
    public pipe.work.Work.LogEntryList getEntrylist() {
      return entrylist_;
    }
    /**
     * <code>optional .LogEntryList entrylist = 6;</code>
     */
    public pipe.work.Work.LogEntryListOrBuilder getEntrylistOrBuilder() {
      return entrylist_;
    }

    public static final int SUCCESS_FIELD_NUMBER = 7;
    private boolean success_;
    /**
     * <code>optional bool success = 7;</code>
     */
    public boolean hasSuccess() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool success = 7;</code>
     */
    public boolean getSuccess() {
      return success_;
    }

    public static final int ISHEARTBEAT_FIELD_NUMBER = 8;
    private boolean isHeartBeat_;
    /**
     * <code>optional bool isHeartBeat = 8;</code>
     */
    public boolean hasIsHeartBeat() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool isHeartBeat = 8;</code>
     */
    public boolean getIsHeartBeat() {
      return isHeartBeat_;
    }

    private void initFields() {
      electionTerm_ = 0;
      leaderNodeId_ = 0;
      prevLogIndex_ = 0;
      prevLogTerm_ = 0;
      leaderCommitIndex_ = 0;
      entrylist_ = pipe.work.Work.LogEntryList.getDefaultInstance();
      success_ = false;
      isHeartBeat_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasElectionTerm()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasEntrylist()) {
        if (!getEntrylist().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, electionTerm_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, leaderNodeId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, prevLogIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, prevLogTerm_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, leaderCommitIndex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, entrylist_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, success_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, isHeartBeat_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, electionTerm_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, leaderNodeId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, prevLogIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, prevLogTerm_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, leaderCommitIndex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, entrylist_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, success_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isHeartBeat_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pipe.work.Work.LogAppendEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.LogAppendEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.LogAppendEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.LogAppendEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.LogAppendEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.LogAppendEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.LogAppendEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pipe.work.Work.LogAppendEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.LogAppendEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.LogAppendEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pipe.work.Work.LogAppendEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LogAppendEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LogAppendEntry)
        pipe.work.Work.LogAppendEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pipe.work.Work.internal_static_LogAppendEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pipe.work.Work.internal_static_LogAppendEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pipe.work.Work.LogAppendEntry.class, pipe.work.Work.LogAppendEntry.Builder.class);
      }

      // Construct using pipe.work.Work.LogAppendEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEntrylistFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        electionTerm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        leaderNodeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        prevLogIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        prevLogTerm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        leaderCommitIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (entrylistBuilder_ == null) {
          entrylist_ = pipe.work.Work.LogEntryList.getDefaultInstance();
        } else {
          entrylistBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        success_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        isHeartBeat_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pipe.work.Work.internal_static_LogAppendEntry_descriptor;
      }

      public pipe.work.Work.LogAppendEntry getDefaultInstanceForType() {
        return pipe.work.Work.LogAppendEntry.getDefaultInstance();
      }

      public pipe.work.Work.LogAppendEntry build() {
        pipe.work.Work.LogAppendEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pipe.work.Work.LogAppendEntry buildPartial() {
        pipe.work.Work.LogAppendEntry result = new pipe.work.Work.LogAppendEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.electionTerm_ = electionTerm_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.leaderNodeId_ = leaderNodeId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.prevLogIndex_ = prevLogIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.prevLogTerm_ = prevLogTerm_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.leaderCommitIndex_ = leaderCommitIndex_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (entrylistBuilder_ == null) {
          result.entrylist_ = entrylist_;
        } else {
          result.entrylist_ = entrylistBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.success_ = success_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.isHeartBeat_ = isHeartBeat_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pipe.work.Work.LogAppendEntry) {
          return mergeFrom((pipe.work.Work.LogAppendEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pipe.work.Work.LogAppendEntry other) {
        if (other == pipe.work.Work.LogAppendEntry.getDefaultInstance()) return this;
        if (other.hasElectionTerm()) {
          setElectionTerm(other.getElectionTerm());
        }
        if (other.hasLeaderNodeId()) {
          setLeaderNodeId(other.getLeaderNodeId());
        }
        if (other.hasPrevLogIndex()) {
          setPrevLogIndex(other.getPrevLogIndex());
        }
        if (other.hasPrevLogTerm()) {
          setPrevLogTerm(other.getPrevLogTerm());
        }
        if (other.hasLeaderCommitIndex()) {
          setLeaderCommitIndex(other.getLeaderCommitIndex());
        }
        if (other.hasEntrylist()) {
          mergeEntrylist(other.getEntrylist());
        }
        if (other.hasSuccess()) {
          setSuccess(other.getSuccess());
        }
        if (other.hasIsHeartBeat()) {
          setIsHeartBeat(other.getIsHeartBeat());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasElectionTerm()) {
          
          return false;
        }
        if (hasEntrylist()) {
          if (!getEntrylist().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pipe.work.Work.LogAppendEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pipe.work.Work.LogAppendEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int electionTerm_ ;
      /**
       * <code>required int32 election_term = 1;</code>
       */
      public boolean hasElectionTerm() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 election_term = 1;</code>
       */
      public int getElectionTerm() {
        return electionTerm_;
      }
      /**
       * <code>required int32 election_term = 1;</code>
       */
      public Builder setElectionTerm(int value) {
        bitField0_ |= 0x00000001;
        electionTerm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 election_term = 1;</code>
       */
      public Builder clearElectionTerm() {
        bitField0_ = (bitField0_ & ~0x00000001);
        electionTerm_ = 0;
        onChanged();
        return this;
      }

      private int leaderNodeId_ ;
      /**
       * <code>optional int32 leader_node_id = 2;</code>
       */
      public boolean hasLeaderNodeId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 leader_node_id = 2;</code>
       */
      public int getLeaderNodeId() {
        return leaderNodeId_;
      }
      /**
       * <code>optional int32 leader_node_id = 2;</code>
       */
      public Builder setLeaderNodeId(int value) {
        bitField0_ |= 0x00000002;
        leaderNodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 leader_node_id = 2;</code>
       */
      public Builder clearLeaderNodeId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        leaderNodeId_ = 0;
        onChanged();
        return this;
      }

      private int prevLogIndex_ ;
      /**
       * <code>optional int32 prev_log_index = 3;</code>
       */
      public boolean hasPrevLogIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 prev_log_index = 3;</code>
       */
      public int getPrevLogIndex() {
        return prevLogIndex_;
      }
      /**
       * <code>optional int32 prev_log_index = 3;</code>
       */
      public Builder setPrevLogIndex(int value) {
        bitField0_ |= 0x00000004;
        prevLogIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 prev_log_index = 3;</code>
       */
      public Builder clearPrevLogIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        prevLogIndex_ = 0;
        onChanged();
        return this;
      }

      private int prevLogTerm_ ;
      /**
       * <code>optional int32 prev_log_term = 4;</code>
       */
      public boolean hasPrevLogTerm() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 prev_log_term = 4;</code>
       */
      public int getPrevLogTerm() {
        return prevLogTerm_;
      }
      /**
       * <code>optional int32 prev_log_term = 4;</code>
       */
      public Builder setPrevLogTerm(int value) {
        bitField0_ |= 0x00000008;
        prevLogTerm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 prev_log_term = 4;</code>
       */
      public Builder clearPrevLogTerm() {
        bitField0_ = (bitField0_ & ~0x00000008);
        prevLogTerm_ = 0;
        onChanged();
        return this;
      }

      private int leaderCommitIndex_ ;
      /**
       * <code>optional int32 leader_commit_index = 5;</code>
       */
      public boolean hasLeaderCommitIndex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 leader_commit_index = 5;</code>
       */
      public int getLeaderCommitIndex() {
        return leaderCommitIndex_;
      }
      /**
       * <code>optional int32 leader_commit_index = 5;</code>
       */
      public Builder setLeaderCommitIndex(int value) {
        bitField0_ |= 0x00000010;
        leaderCommitIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 leader_commit_index = 5;</code>
       */
      public Builder clearLeaderCommitIndex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        leaderCommitIndex_ = 0;
        onChanged();
        return this;
      }

      private pipe.work.Work.LogEntryList entrylist_ = pipe.work.Work.LogEntryList.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.LogEntryList, pipe.work.Work.LogEntryList.Builder, pipe.work.Work.LogEntryListOrBuilder> entrylistBuilder_;
      /**
       * <code>optional .LogEntryList entrylist = 6;</code>
       */
      public boolean hasEntrylist() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .LogEntryList entrylist = 6;</code>
       */
      public pipe.work.Work.LogEntryList getEntrylist() {
        if (entrylistBuilder_ == null) {
          return entrylist_;
        } else {
          return entrylistBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .LogEntryList entrylist = 6;</code>
       */
      public Builder setEntrylist(pipe.work.Work.LogEntryList value) {
        if (entrylistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          entrylist_ = value;
          onChanged();
        } else {
          entrylistBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .LogEntryList entrylist = 6;</code>
       */
      public Builder setEntrylist(
          pipe.work.Work.LogEntryList.Builder builderForValue) {
        if (entrylistBuilder_ == null) {
          entrylist_ = builderForValue.build();
          onChanged();
        } else {
          entrylistBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .LogEntryList entrylist = 6;</code>
       */
      public Builder mergeEntrylist(pipe.work.Work.LogEntryList value) {
        if (entrylistBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              entrylist_ != pipe.work.Work.LogEntryList.getDefaultInstance()) {
            entrylist_ =
              pipe.work.Work.LogEntryList.newBuilder(entrylist_).mergeFrom(value).buildPartial();
          } else {
            entrylist_ = value;
          }
          onChanged();
        } else {
          entrylistBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .LogEntryList entrylist = 6;</code>
       */
      public Builder clearEntrylist() {
        if (entrylistBuilder_ == null) {
          entrylist_ = pipe.work.Work.LogEntryList.getDefaultInstance();
          onChanged();
        } else {
          entrylistBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .LogEntryList entrylist = 6;</code>
       */
      public pipe.work.Work.LogEntryList.Builder getEntrylistBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getEntrylistFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LogEntryList entrylist = 6;</code>
       */
      public pipe.work.Work.LogEntryListOrBuilder getEntrylistOrBuilder() {
        if (entrylistBuilder_ != null) {
          return entrylistBuilder_.getMessageOrBuilder();
        } else {
          return entrylist_;
        }
      }
      /**
       * <code>optional .LogEntryList entrylist = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          pipe.work.Work.LogEntryList, pipe.work.Work.LogEntryList.Builder, pipe.work.Work.LogEntryListOrBuilder> 
          getEntrylistFieldBuilder() {
        if (entrylistBuilder_ == null) {
          entrylistBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              pipe.work.Work.LogEntryList, pipe.work.Work.LogEntryList.Builder, pipe.work.Work.LogEntryListOrBuilder>(
                  getEntrylist(),
                  getParentForChildren(),
                  isClean());
          entrylist_ = null;
        }
        return entrylistBuilder_;
      }

      private boolean success_ ;
      /**
       * <code>optional bool success = 7;</code>
       */
      public boolean hasSuccess() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool success = 7;</code>
       */
      public boolean getSuccess() {
        return success_;
      }
      /**
       * <code>optional bool success = 7;</code>
       */
      public Builder setSuccess(boolean value) {
        bitField0_ |= 0x00000040;
        success_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool success = 7;</code>
       */
      public Builder clearSuccess() {
        bitField0_ = (bitField0_ & ~0x00000040);
        success_ = false;
        onChanged();
        return this;
      }

      private boolean isHeartBeat_ ;
      /**
       * <code>optional bool isHeartBeat = 8;</code>
       */
      public boolean hasIsHeartBeat() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool isHeartBeat = 8;</code>
       */
      public boolean getIsHeartBeat() {
        return isHeartBeat_;
      }
      /**
       * <code>optional bool isHeartBeat = 8;</code>
       */
      public Builder setIsHeartBeat(boolean value) {
        bitField0_ |= 0x00000080;
        isHeartBeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isHeartBeat = 8;</code>
       */
      public Builder clearIsHeartBeat() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isHeartBeat_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LogAppendEntry)
    }

    static {
      defaultInstance = new LogAppendEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LogAppendEntry)
  }

  public interface LogAppendResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LogAppendResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 election_term = 1;</code>
     */
    boolean hasElectionTerm();
    /**
     * <code>required int32 election_term = 1;</code>
     */
    int getElectionTerm();

    /**
     * <code>optional int32 from_node_id = 2;</code>
     */
    boolean hasFromNodeId();
    /**
     * <code>optional int32 from_node_id = 2;</code>
     */
    int getFromNodeId();

    /**
     * <code>optional int32 prev_log_index = 3;</code>
     */
    boolean hasPrevLogIndex();
    /**
     * <code>optional int32 prev_log_index = 3;</code>
     */
    int getPrevLogIndex();

    /**
     * <code>optional int32 prev_log_term = 4;</code>
     */
    boolean hasPrevLogTerm();
    /**
     * <code>optional int32 prev_log_term = 4;</code>
     */
    int getPrevLogTerm();

    /**
     * <code>optional int32 leader_commit_index = 5;</code>
     */
    boolean hasLeaderCommitIndex();
    /**
     * <code>optional int32 leader_commit_index = 5;</code>
     */
    int getLeaderCommitIndex();

    /**
     * <code>required bool responseFlag = 7;</code>
     */
    boolean hasResponseFlag();
    /**
     * <code>required bool responseFlag = 7;</code>
     */
    boolean getResponseFlag();

    /**
     * <code>optional bool isHeartBeat = 8;</code>
     */
    boolean hasIsHeartBeat();
    /**
     * <code>optional bool isHeartBeat = 8;</code>
     */
    boolean getIsHeartBeat();
  }
  /**
   * Protobuf type {@code LogAppendResponse}
   */
  public static final class LogAppendResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:LogAppendResponse)
      LogAppendResponseOrBuilder {
    // Use LogAppendResponse.newBuilder() to construct.
    private LogAppendResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LogAppendResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LogAppendResponse defaultInstance;
    public static LogAppendResponse getDefaultInstance() {
      return defaultInstance;
    }

    public LogAppendResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LogAppendResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              electionTerm_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fromNodeId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              prevLogIndex_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              prevLogTerm_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              leaderCommitIndex_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              responseFlag_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              isHeartBeat_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pipe.work.Work.internal_static_LogAppendResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pipe.work.Work.internal_static_LogAppendResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pipe.work.Work.LogAppendResponse.class, pipe.work.Work.LogAppendResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<LogAppendResponse> PARSER =
        new com.google.protobuf.AbstractParser<LogAppendResponse>() {
      public LogAppendResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogAppendResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LogAppendResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ELECTION_TERM_FIELD_NUMBER = 1;
    private int electionTerm_;
    /**
     * <code>required int32 election_term = 1;</code>
     */
    public boolean hasElectionTerm() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 election_term = 1;</code>
     */
    public int getElectionTerm() {
      return electionTerm_;
    }

    public static final int FROM_NODE_ID_FIELD_NUMBER = 2;
    private int fromNodeId_;
    /**
     * <code>optional int32 from_node_id = 2;</code>
     */
    public boolean hasFromNodeId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 from_node_id = 2;</code>
     */
    public int getFromNodeId() {
      return fromNodeId_;
    }

    public static final int PREV_LOG_INDEX_FIELD_NUMBER = 3;
    private int prevLogIndex_;
    /**
     * <code>optional int32 prev_log_index = 3;</code>
     */
    public boolean hasPrevLogIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 prev_log_index = 3;</code>
     */
    public int getPrevLogIndex() {
      return prevLogIndex_;
    }

    public static final int PREV_LOG_TERM_FIELD_NUMBER = 4;
    private int prevLogTerm_;
    /**
     * <code>optional int32 prev_log_term = 4;</code>
     */
    public boolean hasPrevLogTerm() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 prev_log_term = 4;</code>
     */
    public int getPrevLogTerm() {
      return prevLogTerm_;
    }

    public static final int LEADER_COMMIT_INDEX_FIELD_NUMBER = 5;
    private int leaderCommitIndex_;
    /**
     * <code>optional int32 leader_commit_index = 5;</code>
     */
    public boolean hasLeaderCommitIndex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 leader_commit_index = 5;</code>
     */
    public int getLeaderCommitIndex() {
      return leaderCommitIndex_;
    }

    public static final int RESPONSEFLAG_FIELD_NUMBER = 7;
    private boolean responseFlag_;
    /**
     * <code>required bool responseFlag = 7;</code>
     */
    public boolean hasResponseFlag() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required bool responseFlag = 7;</code>
     */
    public boolean getResponseFlag() {
      return responseFlag_;
    }

    public static final int ISHEARTBEAT_FIELD_NUMBER = 8;
    private boolean isHeartBeat_;
    /**
     * <code>optional bool isHeartBeat = 8;</code>
     */
    public boolean hasIsHeartBeat() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool isHeartBeat = 8;</code>
     */
    public boolean getIsHeartBeat() {
      return isHeartBeat_;
    }

    private void initFields() {
      electionTerm_ = 0;
      fromNodeId_ = 0;
      prevLogIndex_ = 0;
      prevLogTerm_ = 0;
      leaderCommitIndex_ = 0;
      responseFlag_ = false;
      isHeartBeat_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasElectionTerm()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResponseFlag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, electionTerm_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, fromNodeId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, prevLogIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, prevLogTerm_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, leaderCommitIndex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(7, responseFlag_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, isHeartBeat_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, electionTerm_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, fromNodeId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, prevLogIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, prevLogTerm_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, leaderCommitIndex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, responseFlag_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isHeartBeat_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pipe.work.Work.LogAppendResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.LogAppendResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.LogAppendResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.LogAppendResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.LogAppendResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.LogAppendResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.LogAppendResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pipe.work.Work.LogAppendResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.LogAppendResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.LogAppendResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pipe.work.Work.LogAppendResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LogAppendResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LogAppendResponse)
        pipe.work.Work.LogAppendResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pipe.work.Work.internal_static_LogAppendResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pipe.work.Work.internal_static_LogAppendResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pipe.work.Work.LogAppendResponse.class, pipe.work.Work.LogAppendResponse.Builder.class);
      }

      // Construct using pipe.work.Work.LogAppendResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        electionTerm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fromNodeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        prevLogIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        prevLogTerm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        leaderCommitIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        responseFlag_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        isHeartBeat_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pipe.work.Work.internal_static_LogAppendResponse_descriptor;
      }

      public pipe.work.Work.LogAppendResponse getDefaultInstanceForType() {
        return pipe.work.Work.LogAppendResponse.getDefaultInstance();
      }

      public pipe.work.Work.LogAppendResponse build() {
        pipe.work.Work.LogAppendResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pipe.work.Work.LogAppendResponse buildPartial() {
        pipe.work.Work.LogAppendResponse result = new pipe.work.Work.LogAppendResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.electionTerm_ = electionTerm_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fromNodeId_ = fromNodeId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.prevLogIndex_ = prevLogIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.prevLogTerm_ = prevLogTerm_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.leaderCommitIndex_ = leaderCommitIndex_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.responseFlag_ = responseFlag_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isHeartBeat_ = isHeartBeat_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pipe.work.Work.LogAppendResponse) {
          return mergeFrom((pipe.work.Work.LogAppendResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pipe.work.Work.LogAppendResponse other) {
        if (other == pipe.work.Work.LogAppendResponse.getDefaultInstance()) return this;
        if (other.hasElectionTerm()) {
          setElectionTerm(other.getElectionTerm());
        }
        if (other.hasFromNodeId()) {
          setFromNodeId(other.getFromNodeId());
        }
        if (other.hasPrevLogIndex()) {
          setPrevLogIndex(other.getPrevLogIndex());
        }
        if (other.hasPrevLogTerm()) {
          setPrevLogTerm(other.getPrevLogTerm());
        }
        if (other.hasLeaderCommitIndex()) {
          setLeaderCommitIndex(other.getLeaderCommitIndex());
        }
        if (other.hasResponseFlag()) {
          setResponseFlag(other.getResponseFlag());
        }
        if (other.hasIsHeartBeat()) {
          setIsHeartBeat(other.getIsHeartBeat());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasElectionTerm()) {
          
          return false;
        }
        if (!hasResponseFlag()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pipe.work.Work.LogAppendResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pipe.work.Work.LogAppendResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int electionTerm_ ;
      /**
       * <code>required int32 election_term = 1;</code>
       */
      public boolean hasElectionTerm() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 election_term = 1;</code>
       */
      public int getElectionTerm() {
        return electionTerm_;
      }
      /**
       * <code>required int32 election_term = 1;</code>
       */
      public Builder setElectionTerm(int value) {
        bitField0_ |= 0x00000001;
        electionTerm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 election_term = 1;</code>
       */
      public Builder clearElectionTerm() {
        bitField0_ = (bitField0_ & ~0x00000001);
        electionTerm_ = 0;
        onChanged();
        return this;
      }

      private int fromNodeId_ ;
      /**
       * <code>optional int32 from_node_id = 2;</code>
       */
      public boolean hasFromNodeId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 from_node_id = 2;</code>
       */
      public int getFromNodeId() {
        return fromNodeId_;
      }
      /**
       * <code>optional int32 from_node_id = 2;</code>
       */
      public Builder setFromNodeId(int value) {
        bitField0_ |= 0x00000002;
        fromNodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 from_node_id = 2;</code>
       */
      public Builder clearFromNodeId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fromNodeId_ = 0;
        onChanged();
        return this;
      }

      private int prevLogIndex_ ;
      /**
       * <code>optional int32 prev_log_index = 3;</code>
       */
      public boolean hasPrevLogIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 prev_log_index = 3;</code>
       */
      public int getPrevLogIndex() {
        return prevLogIndex_;
      }
      /**
       * <code>optional int32 prev_log_index = 3;</code>
       */
      public Builder setPrevLogIndex(int value) {
        bitField0_ |= 0x00000004;
        prevLogIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 prev_log_index = 3;</code>
       */
      public Builder clearPrevLogIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        prevLogIndex_ = 0;
        onChanged();
        return this;
      }

      private int prevLogTerm_ ;
      /**
       * <code>optional int32 prev_log_term = 4;</code>
       */
      public boolean hasPrevLogTerm() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 prev_log_term = 4;</code>
       */
      public int getPrevLogTerm() {
        return prevLogTerm_;
      }
      /**
       * <code>optional int32 prev_log_term = 4;</code>
       */
      public Builder setPrevLogTerm(int value) {
        bitField0_ |= 0x00000008;
        prevLogTerm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 prev_log_term = 4;</code>
       */
      public Builder clearPrevLogTerm() {
        bitField0_ = (bitField0_ & ~0x00000008);
        prevLogTerm_ = 0;
        onChanged();
        return this;
      }

      private int leaderCommitIndex_ ;
      /**
       * <code>optional int32 leader_commit_index = 5;</code>
       */
      public boolean hasLeaderCommitIndex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 leader_commit_index = 5;</code>
       */
      public int getLeaderCommitIndex() {
        return leaderCommitIndex_;
      }
      /**
       * <code>optional int32 leader_commit_index = 5;</code>
       */
      public Builder setLeaderCommitIndex(int value) {
        bitField0_ |= 0x00000010;
        leaderCommitIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 leader_commit_index = 5;</code>
       */
      public Builder clearLeaderCommitIndex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        leaderCommitIndex_ = 0;
        onChanged();
        return this;
      }

      private boolean responseFlag_ ;
      /**
       * <code>required bool responseFlag = 7;</code>
       */
      public boolean hasResponseFlag() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required bool responseFlag = 7;</code>
       */
      public boolean getResponseFlag() {
        return responseFlag_;
      }
      /**
       * <code>required bool responseFlag = 7;</code>
       */
      public Builder setResponseFlag(boolean value) {
        bitField0_ |= 0x00000020;
        responseFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool responseFlag = 7;</code>
       */
      public Builder clearResponseFlag() {
        bitField0_ = (bitField0_ & ~0x00000020);
        responseFlag_ = false;
        onChanged();
        return this;
      }

      private boolean isHeartBeat_ ;
      /**
       * <code>optional bool isHeartBeat = 8;</code>
       */
      public boolean hasIsHeartBeat() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool isHeartBeat = 8;</code>
       */
      public boolean getIsHeartBeat() {
        return isHeartBeat_;
      }
      /**
       * <code>optional bool isHeartBeat = 8;</code>
       */
      public Builder setIsHeartBeat(boolean value) {
        bitField0_ |= 0x00000040;
        isHeartBeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isHeartBeat = 8;</code>
       */
      public Builder clearIsHeartBeat() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isHeartBeat_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LogAppendResponse)
    }

    static {
      defaultInstance = new LogAppendResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LogAppendResponse)
  }

  public interface FileChunkDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FileChunkData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 reply_to = 5;</code>
     */
    boolean hasReplyTo();
    /**
     * <code>optional int32 reply_to = 5;</code>
     */
    int getReplyTo();

    /**
     * <code>required int32 file_id = 1;</code>
     */
    boolean hasFileId();
    /**
     * <code>required int32 file_id = 1;</code>
     */
    int getFileId();

    /**
     * <code>required string file_name = 2;</code>
     */
    boolean hasFileName();
    /**
     * <code>required string file_name = 2;</code>
     */
    java.lang.String getFileName();
    /**
     * <code>required string file_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    /**
     * <code>required int32 chunk_id = 3;</code>
     */
    boolean hasChunkId();
    /**
     * <code>required int32 chunk_id = 3;</code>
     */
    int getChunkId();

    /**
     * <code>optional bytes chunk_data = 4;</code>
     */
    boolean hasChunkData();
    /**
     * <code>optional bytes chunk_data = 4;</code>
     */
    com.google.protobuf.ByteString getChunkData();

    /**
     * <code>optional bool success = 6;</code>
     */
    boolean hasSuccess();
    /**
     * <code>optional bool success = 6;</code>
     */
    boolean getSuccess();
  }
  /**
   * Protobuf type {@code FileChunkData}
   */
  public static final class FileChunkData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:FileChunkData)
      FileChunkDataOrBuilder {
    // Use FileChunkData.newBuilder() to construct.
    private FileChunkData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FileChunkData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FileChunkData defaultInstance;
    public static FileChunkData getDefaultInstance() {
      return defaultInstance;
    }

    public FileChunkData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FileChunkData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000002;
              fileId_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              fileName_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000008;
              chunkId_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000010;
              chunkData_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000001;
              replyTo_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              success_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pipe.work.Work.internal_static_FileChunkData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pipe.work.Work.internal_static_FileChunkData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pipe.work.Work.FileChunkData.class, pipe.work.Work.FileChunkData.Builder.class);
    }

    public static com.google.protobuf.Parser<FileChunkData> PARSER =
        new com.google.protobuf.AbstractParser<FileChunkData>() {
      public FileChunkData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FileChunkData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FileChunkData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int REPLY_TO_FIELD_NUMBER = 5;
    private int replyTo_;
    /**
     * <code>optional int32 reply_to = 5;</code>
     */
    public boolean hasReplyTo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 reply_to = 5;</code>
     */
    public int getReplyTo() {
      return replyTo_;
    }

    public static final int FILE_ID_FIELD_NUMBER = 1;
    private int fileId_;
    /**
     * <code>required int32 file_id = 1;</code>
     */
    public boolean hasFileId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 file_id = 1;</code>
     */
    public int getFileId() {
      return fileId_;
    }

    public static final int FILE_NAME_FIELD_NUMBER = 2;
    private java.lang.Object fileName_;
    /**
     * <code>required string file_name = 2;</code>
     */
    public boolean hasFileName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string file_name = 2;</code>
     */
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fileName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string file_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHUNK_ID_FIELD_NUMBER = 3;
    private int chunkId_;
    /**
     * <code>required int32 chunk_id = 3;</code>
     */
    public boolean hasChunkId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 chunk_id = 3;</code>
     */
    public int getChunkId() {
      return chunkId_;
    }

    public static final int CHUNK_DATA_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString chunkData_;
    /**
     * <code>optional bytes chunk_data = 4;</code>
     */
    public boolean hasChunkData() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes chunk_data = 4;</code>
     */
    public com.google.protobuf.ByteString getChunkData() {
      return chunkData_;
    }

    public static final int SUCCESS_FIELD_NUMBER = 6;
    private boolean success_;
    /**
     * <code>optional bool success = 6;</code>
     */
    public boolean hasSuccess() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool success = 6;</code>
     */
    public boolean getSuccess() {
      return success_;
    }

    private void initFields() {
      replyTo_ = 0;
      fileId_ = 0;
      fileName_ = "";
      chunkId_ = 0;
      chunkData_ = com.google.protobuf.ByteString.EMPTY;
      success_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFileId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFileName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChunkId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(1, fileId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(2, getFileNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(3, chunkId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(4, chunkData_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(5, replyTo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, success_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fileId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFileNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, chunkId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, chunkData_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, replyTo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, success_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pipe.work.Work.FileChunkData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.FileChunkData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.FileChunkData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pipe.work.Work.FileChunkData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pipe.work.Work.FileChunkData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.FileChunkData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.FileChunkData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pipe.work.Work.FileChunkData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pipe.work.Work.FileChunkData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pipe.work.Work.FileChunkData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pipe.work.Work.FileChunkData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FileChunkData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FileChunkData)
        pipe.work.Work.FileChunkDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pipe.work.Work.internal_static_FileChunkData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pipe.work.Work.internal_static_FileChunkData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pipe.work.Work.FileChunkData.class, pipe.work.Work.FileChunkData.Builder.class);
      }

      // Construct using pipe.work.Work.FileChunkData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        replyTo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fileId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fileName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        chunkId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        chunkData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        success_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pipe.work.Work.internal_static_FileChunkData_descriptor;
      }

      public pipe.work.Work.FileChunkData getDefaultInstanceForType() {
        return pipe.work.Work.FileChunkData.getDefaultInstance();
      }

      public pipe.work.Work.FileChunkData build() {
        pipe.work.Work.FileChunkData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pipe.work.Work.FileChunkData buildPartial() {
        pipe.work.Work.FileChunkData result = new pipe.work.Work.FileChunkData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.replyTo_ = replyTo_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fileId_ = fileId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fileName_ = fileName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.chunkId_ = chunkId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.chunkData_ = chunkData_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.success_ = success_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pipe.work.Work.FileChunkData) {
          return mergeFrom((pipe.work.Work.FileChunkData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pipe.work.Work.FileChunkData other) {
        if (other == pipe.work.Work.FileChunkData.getDefaultInstance()) return this;
        if (other.hasReplyTo()) {
          setReplyTo(other.getReplyTo());
        }
        if (other.hasFileId()) {
          setFileId(other.getFileId());
        }
        if (other.hasFileName()) {
          bitField0_ |= 0x00000004;
          fileName_ = other.fileName_;
          onChanged();
        }
        if (other.hasChunkId()) {
          setChunkId(other.getChunkId());
        }
        if (other.hasChunkData()) {
          setChunkData(other.getChunkData());
        }
        if (other.hasSuccess()) {
          setSuccess(other.getSuccess());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFileId()) {
          
          return false;
        }
        if (!hasFileName()) {
          
          return false;
        }
        if (!hasChunkId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pipe.work.Work.FileChunkData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pipe.work.Work.FileChunkData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int replyTo_ ;
      /**
       * <code>optional int32 reply_to = 5;</code>
       */
      public boolean hasReplyTo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 reply_to = 5;</code>
       */
      public int getReplyTo() {
        return replyTo_;
      }
      /**
       * <code>optional int32 reply_to = 5;</code>
       */
      public Builder setReplyTo(int value) {
        bitField0_ |= 0x00000001;
        replyTo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reply_to = 5;</code>
       */
      public Builder clearReplyTo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        replyTo_ = 0;
        onChanged();
        return this;
      }

      private int fileId_ ;
      /**
       * <code>required int32 file_id = 1;</code>
       */
      public boolean hasFileId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 file_id = 1;</code>
       */
      public int getFileId() {
        return fileId_;
      }
      /**
       * <code>required int32 file_id = 1;</code>
       */
      public Builder setFileId(int value) {
        bitField0_ |= 0x00000002;
        fileId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 file_id = 1;</code>
       */
      public Builder clearFileId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fileId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object fileName_ = "";
      /**
       * <code>required string file_name = 2;</code>
       */
      public boolean hasFileName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string file_name = 2;</code>
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fileName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string file_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string file_name = 2;</code>
       */
      public Builder setFileName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fileName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string file_name = 2;</code>
       */
      public Builder clearFileName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fileName_ = getDefaultInstance().getFileName();
        onChanged();
        return this;
      }
      /**
       * <code>required string file_name = 2;</code>
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fileName_ = value;
        onChanged();
        return this;
      }

      private int chunkId_ ;
      /**
       * <code>required int32 chunk_id = 3;</code>
       */
      public boolean hasChunkId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 chunk_id = 3;</code>
       */
      public int getChunkId() {
        return chunkId_;
      }
      /**
       * <code>required int32 chunk_id = 3;</code>
       */
      public Builder setChunkId(int value) {
        bitField0_ |= 0x00000008;
        chunkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 chunk_id = 3;</code>
       */
      public Builder clearChunkId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        chunkId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString chunkData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes chunk_data = 4;</code>
       */
      public boolean hasChunkData() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes chunk_data = 4;</code>
       */
      public com.google.protobuf.ByteString getChunkData() {
        return chunkData_;
      }
      /**
       * <code>optional bytes chunk_data = 4;</code>
       */
      public Builder setChunkData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        chunkData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes chunk_data = 4;</code>
       */
      public Builder clearChunkData() {
        bitField0_ = (bitField0_ & ~0x00000010);
        chunkData_ = getDefaultInstance().getChunkData();
        onChanged();
        return this;
      }

      private boolean success_ ;
      /**
       * <code>optional bool success = 6;</code>
       */
      public boolean hasSuccess() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool success = 6;</code>
       */
      public boolean getSuccess() {
        return success_;
      }
      /**
       * <code>optional bool success = 6;</code>
       */
      public Builder setSuccess(boolean value) {
        bitField0_ |= 0x00000020;
        success_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool success = 6;</code>
       */
      public Builder clearSuccess() {
        bitField0_ = (bitField0_ & ~0x00000020);
        success_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FileChunkData)
    }

    static {
      defaultInstance = new FileChunkData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FileChunkData)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_WorkState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_WorkState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Heartbeat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Heartbeat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Task_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Task_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Node_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Node_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Discovery_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Discovery_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_WorkMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_WorkMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Command_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Command_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogEntryList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogEntryList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogAppendEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogAppendEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogAppendResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogAppendResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FileChunkData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FileChunkData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nwork.proto\032\014common.proto\032\016election.pro" +
      "to\"0\n\tWorkState\022\020\n\010enqueued\030\001 \002(\005\022\021\n\tpro" +
      "cessed\030\002 \002(\005\"&\n\tHeartbeat\022\031\n\005state\030\001 \002(\013" +
      "2\n.WorkState\")\n\004Task\022\021\n\tseries_id\030\001 \002(\003\022" +
      "\016\n\006seq_id\030\002 \002(\005\";\n\004Node\022\017\n\007node_id\030\001 \002(\005" +
      "\022\017\n\007ip_addr\030\002 \002(\t\022\021\n\twork_port\030\003 \002(\005\"U\n\t" +
      "Discovery\022\034\n\rrouting_table\030\001 \003(\0132\005.Node\022" +
      "\023\n\004node\030\002 \001(\0132\005.Node\022\025\n\006leader\030\003 \001(\0132\005.N" +
      "ode\"\350\007\n\013WorkMessage\022\027\n\006header\030\001 \002(\0132\007.He" +
      "ader\022\016\n\006secret\030\002 \002(\003\022&\n\004type\030\003 \002(\0162\030.Wor",
      "kMessage.MessageType\022\027\n\003err\030\004 \001(\0132\010.Fail" +
      "ureH\000\022\016\n\004ping\030\005 \001(\010H\000\022\032\n\004beat\030\006 \001(\0132\n.He" +
      "artbeatH\000\022\025\n\004task\030\007 \001(\0132\005.TaskH\000\022\033\n\005stat" +
      "e\030\010 \001(\0132\n.WorkStateH\000\022\037\n\006leader\030\t \001(\0132\r." +
      "LeaderStatusH\000\022\037\n\tdiscovery\030\n \001(\0132\n.Disc" +
      "overyH\000\0220\n\025leaderElectionRequest\030\013 \001(\0132\017" +
      ".LeaderElectionH\000\0229\n\026leaderElectionRespo" +
      "nse\030\014 \001(\0132\027.LeaderElectionResponseH\000\022-\n\022" +
      "log_append_entries\030\r \001(\0132\017.LogAppendEntr" +
      "yH\000\022/\n\021logAppendResponse\030\016 \001(\0132\022.LogAppe",
      "ndResponseH\000\022$\n\nchunk_data\030\017 \001(\0132\016.FileC" +
      "hunkDataH\000\022\"\n\nstolenWork\030\020 \001(\0132\014.WorkMes" +
      "sageH\000\"\252\003\n\013MessageType\022\020\n\014DISCOVERNODE\020\001" +
      "\022\025\n\021DISCOVERNODEREPLY\020\002\022\022\n\016LEADERELECTIO" +
      "N\020\003\022\027\n\023LEADERELECTIONREPLY\020\004\022\020\n\014LEADERST" +
      "ATUS\020\005\022\025\n\021LEADERSTATUSREPLY\020\006\022\r\n\tHEARTBE" +
      "AT\020\007\022\010\n\004PING\020\010\022\r\n\tPINGREPLY\020\t\022\013\n\007FAILURE" +
      "\020\n\022\r\n\tWORKSTATE\020\013\022\022\n\016WORKSTATEREPLY\020\014\022\022\n" +
      "\016LOGAPPENDENTRY\020\r\022\025\n\021LOGAPPENDRESPONSE\020\016" +
      "\022\025\n\021CHUNKFILEDATAREAD\020\017\022\026\n\022CHUNKFILEDATA",
      "WRITE\020\020\022\035\n\031CHUNKFILEDATAREADRESPONSE\020\021\022\036" +
      "\n\032CHUNKFILEDATAWRITERESPONSE\020\022\022\024\n\020WORKST" +
      "EALREQUEST\020\023\022\025\n\021WORKSTEALRESPONSE\020\024B\t\n\007p" +
      "ayload\"8\n\007Command\022\013\n\003key\030\001 \002(\t\022\r\n\005value\030" +
      "\002 \002(\t\022\021\n\tclient_id\030\003 \002(\005\"\213\001\n\010LogEntry\022$\n" +
      "\006action\030\001 \002(\0162\024.LogEntry.DataAction\022\026\n\004d" +
      "ata\030\002 \003(\0132\010.Command\022\014\n\004term\030\003 \002(\005\022\r\n\005log" +
      "Id\030\004 \002(\005\"$\n\nDataAction\022\n\n\006INSERT\020\001\022\n\n\006UP" +
      "DATE\020\002\"(\n\014LogEntryList\022\030\n\005entry\030\001 \003(\0132\t." +
      "LogEntry\"\323\001\n\016LogAppendEntry\022\025\n\relection_",
      "term\030\001 \002(\005\022\026\n\016leader_node_id\030\002 \001(\005\022\026\n\016pr" +
      "ev_log_index\030\003 \001(\005\022\025\n\rprev_log_term\030\004 \001(" +
      "\005\022\033\n\023leader_commit_index\030\005 \001(\005\022 \n\tentryl" +
      "ist\030\006 \001(\0132\r.LogEntryList\022\017\n\007success\030\007 \001(" +
      "\010\022\023\n\013isHeartBeat\030\010 \001(\010\"\267\001\n\021LogAppendResp" +
      "onse\022\025\n\relection_term\030\001 \002(\005\022\024\n\014from_node" +
      "_id\030\002 \001(\005\022\026\n\016prev_log_index\030\003 \001(\005\022\025\n\rpre" +
      "v_log_term\030\004 \001(\005\022\033\n\023leader_commit_index\030" +
      "\005 \001(\005\022\024\n\014responseFlag\030\007 \002(\010\022\023\n\013isHeartBe" +
      "at\030\010 \001(\010\"|\n\rFileChunkData\022\020\n\010reply_to\030\005 ",
      "\001(\005\022\017\n\007file_id\030\001 \002(\005\022\021\n\tfile_name\030\002 \002(\t\022" +
      "\020\n\010chunk_id\030\003 \002(\005\022\022\n\nchunk_data\030\004 \001(\014\022\017\n" +
      "\007success\030\006 \001(\010B\r\n\tpipe.workH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          pipe.common.Common.getDescriptor(),
          pipe.election.Election.getDescriptor(),
        }, assigner);
    internal_static_WorkState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_WorkState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_WorkState_descriptor,
        new java.lang.String[] { "Enqueued", "Processed", });
    internal_static_Heartbeat_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Heartbeat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Heartbeat_descriptor,
        new java.lang.String[] { "State", });
    internal_static_Task_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Task_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Task_descriptor,
        new java.lang.String[] { "SeriesId", "SeqId", });
    internal_static_Node_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Node_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Node_descriptor,
        new java.lang.String[] { "NodeId", "IpAddr", "WorkPort", });
    internal_static_Discovery_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Discovery_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Discovery_descriptor,
        new java.lang.String[] { "RoutingTable", "Node", "Leader", });
    internal_static_WorkMessage_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_WorkMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_WorkMessage_descriptor,
        new java.lang.String[] { "Header", "Secret", "Type", "Err", "Ping", "Beat", "Task", "State", "Leader", "Discovery", "LeaderElectionRequest", "LeaderElectionResponse", "LogAppendEntries", "LogAppendResponse", "ChunkData", "StolenWork", "Payload", });
    internal_static_Command_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_Command_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Command_descriptor,
        new java.lang.String[] { "Key", "Value", "ClientId", });
    internal_static_LogEntry_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_LogEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogEntry_descriptor,
        new java.lang.String[] { "Action", "Data", "Term", "LogId", });
    internal_static_LogEntryList_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_LogEntryList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogEntryList_descriptor,
        new java.lang.String[] { "Entry", });
    internal_static_LogAppendEntry_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_LogAppendEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogAppendEntry_descriptor,
        new java.lang.String[] { "ElectionTerm", "LeaderNodeId", "PrevLogIndex", "PrevLogTerm", "LeaderCommitIndex", "Entrylist", "Success", "IsHeartBeat", });
    internal_static_LogAppendResponse_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_LogAppendResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogAppendResponse_descriptor,
        new java.lang.String[] { "ElectionTerm", "FromNodeId", "PrevLogIndex", "PrevLogTerm", "LeaderCommitIndex", "ResponseFlag", "IsHeartBeat", });
    internal_static_FileChunkData_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_FileChunkData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_FileChunkData_descriptor,
        new java.lang.String[] { "ReplyTo", "FileId", "FileName", "ChunkId", "ChunkData", "Success", });
    pipe.common.Common.getDescriptor();
    pipe.election.Election.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
